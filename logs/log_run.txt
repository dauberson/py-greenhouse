Sat Jul 17 08:08:01 PM -03 2021
Creating py-greenhouse_run_run ... 
Creating py-greenhouse_run_run ... done
[nltk_data] Downloading package stopwords to /root/nltk_data...
[nltk_data]   Unzipping corpora/stopwords.zip.
[nltk_data] Downloading package punkt to /root/nltk_data...
[nltk_data]   Unzipping tokenizers/punkt.zip.
[2021-07-17 23:08:06+0000] INFO - prefect.FlowRunner | Beginning Flow run for 'greenhouse'
[2021-07-17 23:08:06+0000] INFO - prefect.TaskRunner | Task 'sourcing': Starting task run...
[2021-07-17 23:08:06+0000] INFO - prefect.TaskRunner | Task 'sourcing': Finished task run for task with final state: 'Success'
[2021-07-17 23:08:06+0000] INFO - prefect.TaskRunner | Task 'cleansing': Starting task run...
[2021-07-17 23:08:06+0000] INFO - prefect.TaskRunner | Task 'cleansing': Finished task run for task with final state: 'Success'
[2021-07-17 23:08:06+0000] INFO - prefect.TaskRunner | Task 'tokenizing': Starting task run...
[2021-07-17 23:08:06+0000] INFO - prefect.TaskRunner | Task 'tokenizing': Finished task run for task with final state: 'Success'
[2021-07-17 23:08:06+0000] INFO - prefect.TaskRunner | Task 'stop_words': Starting task run...
[2021-07-17 23:08:06+0000] INFO - prefect.TaskRunner | Task 'stop_words': Finished task run for task with final state: 'Success'
[2021-07-17 23:08:06+0000] INFO - prefect.TaskRunner | Task 'task_print': Starting task run...
[2021-07-17 23:08:06+0000] INFO - prefect.TaskRunner |                                                    text      cats                                         clean_text                                             tokens                                        tokens_wosw
3505  RT @implicante_org: Governo investigará se van...    Neutro  rt implicante_org governo investigará se vanda...  [rt, implicante_org, governo, investigará, se,...  [rt, implicante_org, governo, investigará, van...
4956  Vereadores de Governador Valadares não terão 1...    Neutro  vereadores de governador valadares não terão 1...  [vereadores, de, governador, valadares, não, t...  [vereadores, governador, valadares, 13º, salár...
4484  RT @UOLNoticias: Custaram R$ 21,8 milhões: Mes...  Negativo  rt uolnoticias custaram 21 8 milhões mesmo em ...  [rt, uolnoticias, custaram, 21, 8, milhões, me...  [rt, uolnoticias, custaram, 21, 8, milhões, ca...
4239  RT @Silvio_MKT: Fernando Pimentel PISA e COSPE...  Negativo  rt silvio_mkt fernando pimentel pisa cospe em ...  [rt, silvio_mkt, fernando, pimentel, pisa, cos...  [rt, silvio_mkt, fernando, pimentel, pisa, cos...
4502  RT @UOLNoticias: Desastre ambiental em MG: Emp...    Neutro  rt uolnoticias desastre ambiental em mg empres...  [rt, uolnoticias, desastre, ambiental, em, mg,...  [rt, uolnoticias, desastre, ambiental, mg, emp...
39    #beta #betalab #mg Ex-ministro e outros: Servi...    Neutro   beta betalab mg ex ministro outros servidores...  [beta, betalab, mg, ex, ministro, outros, serv...  [beta, betalab, mg, ex, ministro, outros, serv...
6685  RT @JornalOGlobo: Com três anos, presídio priv...  Positivo  rt jornaloglobo com três anos presídio privado...  [rt, jornaloglobo, com, três, anos, presídio, ...  [rt, jornaloglobo, três, anos, presídio, priva...
3704  RT @LRagazzi: Ex-diretor do governo de Minas. ...    Neutro  rt lragazzi ex diretor do governo de minas sai...  [rt, lragazzi, ex, diretor, do, governo, de, m...  [rt, lragazzi, ex, diretor, governo, minas, sa...
6303  Grupo é detido após roubo e carreta recuperada...  Positivo  grupo é detido após roubo carreta recuperada e...  [grupo, é, detido, após, roubo, carreta, recup...  [grupo, detido, após, roubo, carreta, recupera...
3903  RT @oficialmchariel: Fui parar em contagem, es...    Neutro  rt oficialmchariel fui parar em contagem estad...  [rt, oficialmchariel, fui, parar, em, contagem...  [rt, oficialmchariel, parar, contagem, estado,...
763   Custaram R$ 21,8 milhões: Mesmo em calamidade,...  Negativo  custaram 21 8 milhões mesmo em calamidade gove...  [custaram, 21, 8, milhões, mesmo, em, calamida...  [custaram, 21, 8, milhões, calamidade, governo...
5411  Governo anuncia ensino integral em três escola...  Positivo  governo anuncia ensino integral em três escola...  [governo, anuncia, ensino, integral, em, três,...  [governo, anuncia, ensino, integral, três, esc...
7488  Homem é preso suspeito de envolvimento com trá...  Positivo  homem é preso suspeito de envolvimento com trá...  [homem, é, preso, suspeito, de, envolvimento, ...  [homem, preso, suspeito, envolvimento, tráfico...
6770  RT @pmmg190: @PMMG190 - UNAÍ - PRISÃO POR TRÁF...  Positivo  rt pmmg190 pmmg190 unaí prisão por tráfico de ...  [rt, pmmg190, pmmg190, unaí, prisão, por, tráf...  [rt, pmmg190, pmmg190, unaí, prisão, tráfico, ...
3587  RT @jfcomenale: #SomosTodosMoro \n\nPresidente...    Neutro  rt jfcomenale somostodosmoro presidente do stj...  [rt, jfcomenale, somostodosmoro, presidente, d...  [rt, jfcomenale, somostodosmoro, presidente, s...
1971  Pesco a 40 anos . BSB Country  em Paracatu.\nO...    Neutro  pesco 40 anos bsb country em paracatu rio esta...  [pesco, 40, anos, bsb, country, em, paracatu, ...  [pesco, 40, anos, bsb, country, paracatu, rio,...
8170  Três homens são presos por suspeita de roubo d...  Positivo  três homens são presos por suspeita de roubo d...  [três, homens, são, presos, por, suspeita, de,...  [três, homens, presos, suspeita, roubo, cargas...
2423  RT @AnaPaulaVolei: Mais 2 helicópteros!!A cara...  Negativo  rt anapaulavolei mais 2 helicópteros cara de p...  [rt, anapaulavolei, mais, 2, helicópteros, car...  [rt, anapaulavolei, 2, helicópteros, cara, pau...
7332  RT @OGloboPolitica: Presídio em Minas adota no...  Positivo  rt oglobopolitica presídio em minas adota novo...  [rt, oglobopolitica, presídio, em, minas, adot...  [rt, oglobopolitica, presídio, minas, adota, n...
1090  Estado de calamidade pública está a vida do se...  Negativo  estado de calamidade pública está vida do serv...  [estado, de, calamidade, pública, está, vida, ...  [estado, calamidade, pública, vida, servidor, ...
5154  RT @jornalhojeemdia: Resultado das contas do g...  Positivo  rt jornalhojeemdia resultado das contas do gov...  [rt, jornalhojeemdia, resultado, das, contas, ...  [rt, jornalhojeemdia, resultado, contas, gover...
5259  Fomentar a educação na zona rural de Minas Ger...  Positivo  fomentar educação na zona rural de minas gerai...  [fomentar, educação, na, zona, rural, de, mina...  [fomentar, educação, zona, rural, minas, gerai...
4486  RT @UOLNoticias: Custaram R$ 21,8 milhões: Mes...  Negativo  rt uolnoticias custaram 21 8 milhões mesmo em ...  [rt, uolnoticias, custaram, 21, 8, milhões, me...  [rt, uolnoticias, custaram, 21, 8, milhões, ca...
1198  Governo de MG põe em sigilo dados sobre voos d...  Negativo  governo de mg põe em sigilo dados sobre voos d...  [governo, de, mg, põe, em, sigilo, dados, sobr...  [governo, mg, põe, sigilo, dados, sobre, voos,...
2333  RT @AnaPaulaVolei: Mais 2 helicópteros!!A cara...  Negativo  rt anapaulavolei mais 2 helicópteros cara de p...  [rt, anapaulavolei, mais, 2, helicópteros, car...  [rt, anapaulavolei, 2, helicópteros, cara, pau...
1169  Governador Petista Têm se dedicado ao seu novo...  Negativo  governador petista têm se dedicado ao seu novo...  [governador, petista, têm, se, dedicado, ao, s...  [governador, petista, têm, dedicado, novo, neg...
3682  RT @levantatet5: #LevántateFinal ¿Quién ha est...    Neutro  rt levantatet5 levántatefinal quién ha estado ...  [rt, levantatet5, levántatefinal, quién, ha, e...  [rt, levantatet5, levántatefinal, quién, ha, e...
1064  Escala pagamento IPVA 2017 no Estado de Minas ...    Neutro  escala pagamento ipva 2017 no estado de minas ...  [escala, pagamento, ipva, 2017, no, estado, de...  [escala, pagamento, ipva, 2017, estado, minas,...
5012  A Força Nacional do #SUS reforça ajuda ao esta...  Positivo  a força nacional do sus reforça ajuda ao estad...  [a, força, nacional, do, sus, reforça, ajuda, ...  [força, nacional, sus, reforça, ajuda, estado,...
7236  Presídio em Minas adota novo modelo e consegue...  Positivo  presídio em minas adota novo modelo consegue r...  [presídio, em, minas, adota, novo, modelo, con...  [presídio, minas, adota, novo, modelo, consegu...
3920  RT @oldairt: Rio e Minas Pensei que  estivesse...  Negativo  rt oldairt rio minas pensei que estivessem em ...  [rt, oldairt, rio, minas, pensei, que, estives...  [rt, oldairt, rio, minas, pensei, crise, gover...
6642  RT @JornalOGlobo: Com três anos, presídio priv...  Positivo  rt jornaloglobo com três anos presídio privado...  [rt, jornaloglobo, com, três, anos, presídio, ...  [rt, jornaloglobo, três, anos, presídio, priva...
2385  RT @AnaPaulaVolei: Mais 2 helicópteros!!A cara...  Negativo  rt anapaulavolei mais 2 helicópteros cara de p...  [rt, anapaulavolei, mais, 2, helicópteros, car...  [rt, anapaulavolei, 2, helicópteros, cara, pau...
2854  RT @ceciliedite: Não sei pra quê serve esses v...  Negativo  rt ceciliedite não sei pra quê serve esses ver...  [rt, ceciliedite, não, sei, pra, quê, serve, e...  [rt, ceciliedite, sei, pra, quê, serve, veread...
2796  RT @capslock_io: Governo de Minas Gerais compr...  Negativo  rt capslock_io governo de minas gerais compra ...  [rt, capslock_io, governo, de, minas, gerais, ...  [rt, capslock_io, governo, minas, gerais, comp...
2229  RT @adilsonjr11: Mesmo em calamidade financeir...  Negativo  rt adilsonjr11 mesmo em calamidade financeira ...  [rt, adilsonjr11, mesmo, em, calamidade, finan...  [rt, adilsonjr11, calamidade, financeira, gove...
5549  11,5 MILHÕES DE DOSES\nGoverno vai reforçar es...  Positivo  11 5 milhões de doses governo vai reforçar est...  [11, 5, milhões, de, doses, governo, vai, refo...  [11, 5, milhões, doses, governo, vai, reforçar...
592   BB e governo de Minas travam disputa sobre dep...  Negativo  bb governo de minas travam disputa sobre depós...  [bb, governo, de, minas, travam, disputa, sobr...  [bb, governo, minas, travam, disputa, sobre, d...
1060  Entrará para a história como o pior governador...  Negativo  entrará para história como pior governador de ...  [entrará, para, história, como, pior, governad...  [entrará, história, pior, governador, minas, h...
8126  Quadrilha é presa por tráfico de drogas em Tim...  Positivo  quadrilha é presa por tráfico de drogas em tim...  [quadrilha, é, presa, por, tráfico, de, drogas...  [quadrilha, presa, tráfico, drogas, timóteo, m...
1745  Minas Gerais, melhor estado do Brasil sil sil ...    Neutro  minas gerais melhor estado do brasil sil sil s...  [minas, gerais, melhor, estado, do, brasil, si...  [minas, gerais, melhor, estado, brasil, sil, s...
4165  RT @RevistaISTOE: Mesmo em ‘calamidade finance...  Negativo  rt revistaistoe mesmo em calamidade financeira...  [rt, revistaistoe, mesmo, em, calamidade, fina...  [rt, revistaistoe, calamidade, financeira, gov...
311   2) Vc só percebe isso quando passa anos morand...    Neutro  2 vc só percebe isso quando passa anos morando...  [2, vc, só, percebe, isso, quando, passa, anos...  [2, vc, percebe, passa, anos, morando, estado,...
2353  RT @AnaPaulaVolei: Mais 2 helicópteros!!A cara...  Negativo  rt anapaulavolei mais 2 helicópteros cara de p...  [rt, anapaulavolei, mais, 2, helicópteros, car...  [rt, anapaulavolei, 2, helicópteros, cara, pau...
4503  RT @UOLNoticias: Desastre ambiental em MG: Emp...    Neutro  rt uolnoticias desastre ambiental em mg empres...  [rt, uolnoticias, desastre, ambiental, em, mg,...  [rt, uolnoticias, desastre, ambiental, mg, emp...
5355  Prefeitura de Juiz de Fora divulga convocação ...  Positivo  prefeitura de juiz de fora divulga convocação ...  [prefeitura, de, juiz, de, fora, divulga, conv...  [prefeitura, juiz, divulga, convocação, educaç...
6374  Jovem é preso suspeito de violência doméstica ...  Positivo  jovem é preso suspeito de violência doméstica ...  [jovem, é, preso, suspeito, de, violência, dom...  [jovem, preso, suspeito, violência, doméstica,...
1104  Estos wachins q le dan mg al estado\nUn bife a...    Neutro  estos wachins le dan mg al estado un bife cada...  [estos, wachins, le, dan, mg, al, estado, un, ...  [estos, wachins, le, dan, mg, al, estado, un, ...
513   BB avisa Justiça que governo de MG não tem rec...  Negativo  bb avisa justiça que governo de mg não tem rec...  [bb, avisa, justiça, que, governo, de, mg, não...  [bb, avisa, justiça, governo, mg, recursos, co...
2298  RT @AnaPaulaVolei: Mais 2 helicópteros!!A cara...  Negativo  rt anapaulavolei mais 2 helicópteros cara de p...  [rt, anapaulavolei, mais, 2, helicópteros, car...  [rt, anapaulavolei, 2, helicópteros, cara, pau...
[2021-07-17 23:08:06+0000] INFO - prefect.TaskRunner | Task 'task_print': Finished task run for task with final state: 'Success'
[2021-07-17 23:08:06+0000] INFO - prefect.TaskRunner | Task 'splitting': Starting task run...
[2021-07-17 23:08:06+0000] INFO - prefect.TaskRunner | Task 'splitting': Finished task run for task with final state: 'Success'
[2021-07-17 23:08:06+0000] INFO - prefect.TaskRunner | Task 'splitting[0]': Starting task run...
[2021-07-17 23:08:06+0000] INFO - prefect.TaskRunner | Task 'splitting[0]': Finished task run for task with final state: 'Success'
[2021-07-17 23:08:06+0000] INFO - prefect.TaskRunner | Task 'splitting[1]': Starting task run...
[2021-07-17 23:08:06+0000] INFO - prefect.TaskRunner | Task 'splitting[1]': Finished task run for task with final state: 'Success'
[2021-07-17 23:08:06+0000] INFO - prefect.TaskRunner | Task 'splitting[2]': Starting task run...
[2021-07-17 23:08:06+0000] INFO - prefect.TaskRunner | Task 'splitting[2]': Finished task run for task with final state: 'Success'
[2021-07-17 23:08:06+0000] INFO - prefect.TaskRunner | Task 'model': Starting task run...
Fitting 5 folds for each of 10 candidates, totalling 50 fits
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=30.0, model__max_leaf_nodes=64, model__n_estimators=900, model__oob_score=True; total time=   1.5s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=30.0, model__max_leaf_nodes=64, model__n_estimators=900, model__oob_score=True; total time=   1.5s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=30.0, model__max_leaf_nodes=64, model__n_estimators=900, model__oob_score=True; total time=   1.5s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=30.0, model__max_leaf_nodes=64, model__n_estimators=900, model__oob_score=True; total time=   1.5s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=30.0, model__max_leaf_nodes=64, model__n_estimators=900, model__oob_score=True; total time=   1.5s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=7.0, model__max_leaf_nodes=128, model__n_estimators=200, model__oob_score=True; total time=   0.3s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=7.0, model__max_leaf_nodes=128, model__n_estimators=200, model__oob_score=True; total time=   0.3s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=7.0, model__max_leaf_nodes=128, model__n_estimators=200, model__oob_score=True; total time=   0.3s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=7.0, model__max_leaf_nodes=128, model__n_estimators=200, model__oob_score=True; total time=   0.3s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=7.0, model__max_leaf_nodes=128, model__n_estimators=200, model__oob_score=True; total time=   0.3s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=31.0, model__max_leaf_nodes=64, model__n_estimators=800, model__oob_score=True; total time=   1.3s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=31.0, model__max_leaf_nodes=64, model__n_estimators=800, model__oob_score=True; total time=   1.3s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=31.0, model__max_leaf_nodes=64, model__n_estimators=800, model__oob_score=True; total time=   1.3s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=31.0, model__max_leaf_nodes=64, model__n_estimators=800, model__oob_score=True; total time=   1.3s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=31.0, model__max_leaf_nodes=64, model__n_estimators=800, model__oob_score=True; total time=   1.3s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=26.0, model__max_leaf_nodes=16, model__n_estimators=600, model__oob_score=True; total time=   1.0s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=26.0, model__max_leaf_nodes=16, model__n_estimators=600, model__oob_score=True; total time=   1.0s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=26.0, model__max_leaf_nodes=16, model__n_estimators=600, model__oob_score=True; total time=   0.9s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=26.0, model__max_leaf_nodes=16, model__n_estimators=600, model__oob_score=True; total time=   0.9s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=26.0, model__max_leaf_nodes=16, model__n_estimators=600, model__oob_score=True; total time=   0.9s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=27.0, model__max_leaf_nodes=128, model__n_estimators=700, model__oob_score=True; total time=   1.1s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=27.0, model__max_leaf_nodes=128, model__n_estimators=700, model__oob_score=True; total time=   1.1s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=27.0, model__max_leaf_nodes=128, model__n_estimators=700, model__oob_score=True; total time=   1.1s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=27.0, model__max_leaf_nodes=128, model__n_estimators=700, model__oob_score=True; total time=   1.1s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=27.0, model__max_leaf_nodes=128, model__n_estimators=700, model__oob_score=True; total time=   1.1s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=5.0, model__max_leaf_nodes=16, model__n_estimators=100, model__oob_score=True; total time=   0.2s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=5.0, model__max_leaf_nodes=16, model__n_estimators=100, model__oob_score=True; total time=   0.2s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=5.0, model__max_leaf_nodes=16, model__n_estimators=100, model__oob_score=True; total time=   0.2s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=5.0, model__max_leaf_nodes=16, model__n_estimators=100, model__oob_score=True; total time=   0.2s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=5.0, model__max_leaf_nodes=16, model__n_estimators=100, model__oob_score=True; total time=   0.2s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=4.0, model__max_leaf_nodes=128, model__n_estimators=400, model__oob_score=True; total time=   0.7s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=4.0, model__max_leaf_nodes=128, model__n_estimators=400, model__oob_score=True; total time=   0.7s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=4.0, model__max_leaf_nodes=128, model__n_estimators=400, model__oob_score=True; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=4.0, model__max_leaf_nodes=128, model__n_estimators=400, model__oob_score=True; total time=   0.7s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=4.0, model__max_leaf_nodes=128, model__n_estimators=400, model__oob_score=True; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=entropy, model__max_depth=2.0, model__max_leaf_nodes=64, model__n_estimators=600, model__oob_score=True; total time=   0.9s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=entropy, model__max_depth=2.0, model__max_leaf_nodes=64, model__n_estimators=600, model__oob_score=True; total time=   1.0s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=entropy, model__max_depth=2.0, model__max_leaf_nodes=64, model__n_estimators=600, model__oob_score=True; total time=   0.9s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=entropy, model__max_depth=2.0, model__max_leaf_nodes=64, model__n_estimators=600, model__oob_score=True; total time=   0.9s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=entropy, model__max_depth=2.0, model__max_leaf_nodes=64, model__n_estimators=600, model__oob_score=True; total time=   1.0s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=entropy, model__max_depth=5.0, model__max_leaf_nodes=16, model__n_estimators=500, model__oob_score=True; total time=   0.8s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=entropy, model__max_depth=5.0, model__max_leaf_nodes=16, model__n_estimators=500, model__oob_score=True; total time=   0.8s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=entropy, model__max_depth=5.0, model__max_leaf_nodes=16, model__n_estimators=500, model__oob_score=True; total time=   0.8s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=entropy, model__max_depth=5.0, model__max_leaf_nodes=16, model__n_estimators=500, model__oob_score=True; total time=   0.8s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=entropy, model__max_depth=5.0, model__max_leaf_nodes=16, model__n_estimators=500, model__oob_score=True; total time=   0.8s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=entropy, model__max_depth=4.0, model__max_leaf_nodes=128, model__n_estimators=100, model__oob_score=True; total time=   0.2s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=entropy, model__max_depth=4.0, model__max_leaf_nodes=128, model__n_estimators=100, model__oob_score=True; total time=   0.2s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=entropy, model__max_depth=4.0, model__max_leaf_nodes=128, model__n_estimators=100, model__oob_score=True; total time=   0.2s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=entropy, model__max_depth=4.0, model__max_leaf_nodes=128, model__n_estimators=100, model__oob_score=True; total time=   0.2s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=entropy, model__max_depth=4.0, model__max_leaf_nodes=128, model__n_estimators=100, model__oob_score=True; total time=   0.2s
[2021-07-17 23:08:47+0000] INFO - prefect.TaskRunner | Task 'model': Finished task run for task with final state: 'Success'
[2021-07-17 23:08:47+0000] INFO - prefect.TaskRunner | Task 'model[2]': Starting task run...
[2021-07-17 23:08:47+0000] INFO - prefect.TaskRunner | Task 'model[2]': Finished task run for task with final state: 'Success'
[2021-07-17 23:08:47+0000] INFO - prefect.TaskRunner | Task 'model[0]': Starting task run...
[2021-07-17 23:08:47+0000] INFO - prefect.TaskRunner | Task 'model[0]': Finished task run for task with final state: 'Success'
[2021-07-17 23:08:47+0000] INFO - prefect.TaskRunner | Task 'model[3]': Starting task run...
[2021-07-17 23:08:47+0000] INFO - prefect.TaskRunner | Task 'model[3]': Finished task run for task with final state: 'Success'
[2021-07-17 23:08:47+0000] INFO - prefect.TaskRunner | Task 'model[2]['actual']': Starting task run...
[2021-07-17 23:08:47+0000] INFO - prefect.TaskRunner | Task 'model[2]['actual']': Finished task run for task with final state: 'Success'
[2021-07-17 23:08:47+0000] INFO - prefect.TaskRunner | Task 'model[0]['actual']': Starting task run...
[2021-07-17 23:08:47+0000] INFO - prefect.TaskRunner | Task 'model[0]['actual']': Finished task run for task with final state: 'Success'
[2021-07-17 23:08:47+0000] INFO - prefect.TaskRunner | Task 'model[0]['pred']': Starting task run...
[2021-07-17 23:08:47+0000] INFO - prefect.TaskRunner | Task 'model[0]['pred']': Finished task run for task with final state: 'Success'
[2021-07-17 23:08:47+0000] INFO - prefect.TaskRunner | Task 'model[1]': Starting task run...
[2021-07-17 23:08:47+0000] INFO - prefect.TaskRunner | Task 'model[1]': Finished task run for task with final state: 'Success'
[2021-07-17 23:08:47+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Starting task run...
[2021-07-17 23:08:47+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Finished task run for task with final state: 'Success'
[2021-07-17 23:08:47+0000] INFO - prefect.TaskRunner | Task 'model[1]['actual']': Starting task run...
[2021-07-17 23:08:47+0000] INFO - prefect.TaskRunner | Task 'model[1]['actual']': Finished task run for task with final state: 'Success'
[2021-07-17 23:08:47+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Starting task run...
[2021-07-17 23:08:47+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Finished task run for task with final state: 'Success'
[2021-07-17 23:08:47+0000] INFO - prefect.TaskRunner | Task 'performance': Starting task run...
[2021-07-17 23:08:47+0000] INFO - prefect.TaskRunner | Task 'performance': Finished task run for task with final state: 'Success'
[2021-07-17 23:08:47+0000] INFO - prefect.TaskRunner | Task 'model[2]['pred']': Starting task run...
[2021-07-17 23:08:47+0000] INFO - prefect.TaskRunner | Task 'model[2]['pred']': Finished task run for task with final state: 'Success'
[2021-07-17 23:08:47+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Starting task run...
[2021-07-17 23:08:47+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Finished task run for task with final state: 'Success'
[2021-07-17 23:08:47+0000] INFO - prefect.TaskRunner | Task 'performance': Starting task run...
[2021-07-17 23:08:47+0000] INFO - prefect.TaskRunner | Task 'performance': Finished task run for task with final state: 'Success'
[2021-07-17 23:08:47+0000] INFO - prefect.TaskRunner | Task 'model[1]['pred']': Starting task run...
[2021-07-17 23:08:47+0000] INFO - prefect.TaskRunner | Task 'model[1]['pred']': Finished task run for task with final state: 'Success'
[2021-07-17 23:08:47+0000] INFO - prefect.TaskRunner | Task 'performance': Starting task run...
[2021-07-17 23:08:47+0000] INFO - prefect.TaskRunner | Task 'performance': Finished task run for task with final state: 'Success'
[2021-07-17 23:08:47+0000] INFO - prefect.FlowRunner | Flow run SUCCESS: all reference tasks succeeded
Sun Jul 18 11:23:09 AM -03 2021
Creating py-greenhouse_run_run ... 
Creating py-greenhouse_run_run ... done
[nltk_data] Downloading package stopwords to /root/nltk_data...
[nltk_data]   Unzipping corpora/stopwords.zip.
[nltk_data] Downloading package punkt to /root/nltk_data...
[nltk_data]   Unzipping tokenizers/punkt.zip.
[2021-07-18 14:23:15+0000] INFO - prefect.FlowRunner | Beginning Flow run for 'greenhouse'
[2021-07-18 14:23:15+0000] INFO - prefect.TaskRunner | Task 'sourcing': Starting task run...
[2021-07-18 14:23:15+0000] INFO - prefect.TaskRunner | Task 'sourcing': Finished task run for task with final state: 'Success'
[2021-07-18 14:23:15+0000] INFO - prefect.TaskRunner | Task 'cleansing': Starting task run...
[2021-07-18 14:23:15+0000] INFO - prefect.TaskRunner | Task 'cleansing': Finished task run for task with final state: 'Success'
[2021-07-18 14:23:15+0000] INFO - prefect.TaskRunner | Task 'tokenizing': Starting task run...
[2021-07-18 14:23:15+0000] INFO - prefect.TaskRunner | Task 'tokenizing': Finished task run for task with final state: 'Success'
[2021-07-18 14:23:15+0000] INFO - prefect.TaskRunner | Task 'stop_words': Starting task run...
[2021-07-18 14:23:15+0000] INFO - prefect.TaskRunner | Task 'stop_words': Finished task run for task with final state: 'Success'
[2021-07-18 14:23:15+0000] INFO - prefect.TaskRunner | Task 'task_print': Starting task run...
[2021-07-18 14:23:15+0000] INFO - prefect.TaskRunner |                                                    text      cats                                         clean_text                                             tokens                                        tokens_wosw
3505  RT @implicante_org: Governo investigará se van...    Neutro  rt implicante_org governo investigará se vanda...  [rt, implicante_org, governo, investigará, se,...  [rt, implicante_org, governo, investigará, van...
4956  Vereadores de Governador Valadares não terão 1...    Neutro  vereadores de governador valadares não terão 1...  [vereadores, de, governador, valadares, não, t...  [vereadores, governador, valadares, 13º, salár...
4484  RT @UOLNoticias: Custaram R$ 21,8 milhões: Mes...  Negativo  rt uolnoticias custaram 21 8 milhões mesmo em ...  [rt, uolnoticias, custaram, 21, 8, milhões, me...  [rt, uolnoticias, custaram, 21, 8, milhões, ca...
4239  RT @Silvio_MKT: Fernando Pimentel PISA e COSPE...  Negativo  rt silvio_mkt fernando pimentel pisa cospe em ...  [rt, silvio_mkt, fernando, pimentel, pisa, cos...  [rt, silvio_mkt, fernando, pimentel, pisa, cos...
4502  RT @UOLNoticias: Desastre ambiental em MG: Emp...    Neutro  rt uolnoticias desastre ambiental em mg empres...  [rt, uolnoticias, desastre, ambiental, em, mg,...  [rt, uolnoticias, desastre, ambiental, mg, emp...
39    #beta #betalab #mg Ex-ministro e outros: Servi...    Neutro   beta betalab mg ex ministro outros servidores...  [beta, betalab, mg, ex, ministro, outros, serv...  [beta, betalab, mg, ex, ministro, outros, serv...
6685  RT @JornalOGlobo: Com três anos, presídio priv...  Positivo  rt jornaloglobo com três anos presídio privado...  [rt, jornaloglobo, com, três, anos, presídio, ...  [rt, jornaloglobo, três, anos, presídio, priva...
3704  RT @LRagazzi: Ex-diretor do governo de Minas. ...    Neutro  rt lragazzi ex diretor do governo de minas sai...  [rt, lragazzi, ex, diretor, do, governo, de, m...  [rt, lragazzi, ex, diretor, governo, minas, sa...
6303  Grupo é detido após roubo e carreta recuperada...  Positivo  grupo é detido após roubo carreta recuperada e...  [grupo, é, detido, após, roubo, carreta, recup...  [grupo, detido, após, roubo, carreta, recupera...
3903  RT @oficialmchariel: Fui parar em contagem, es...    Neutro  rt oficialmchariel fui parar em contagem estad...  [rt, oficialmchariel, fui, parar, em, contagem...  [rt, oficialmchariel, parar, contagem, estado,...
763   Custaram R$ 21,8 milhões: Mesmo em calamidade,...  Negativo  custaram 21 8 milhões mesmo em calamidade gove...  [custaram, 21, 8, milhões, mesmo, em, calamida...  [custaram, 21, 8, milhões, calamidade, governo...
5411  Governo anuncia ensino integral em três escola...  Positivo  governo anuncia ensino integral em três escola...  [governo, anuncia, ensino, integral, em, três,...  [governo, anuncia, ensino, integral, três, esc...
7488  Homem é preso suspeito de envolvimento com trá...  Positivo  homem é preso suspeito de envolvimento com trá...  [homem, é, preso, suspeito, de, envolvimento, ...  [homem, preso, suspeito, envolvimento, tráfico...
6770  RT @pmmg190: @PMMG190 - UNAÍ - PRISÃO POR TRÁF...  Positivo  rt pmmg190 pmmg190 unaí prisão por tráfico de ...  [rt, pmmg190, pmmg190, unaí, prisão, por, tráf...  [rt, pmmg190, pmmg190, unaí, prisão, tráfico, ...
3587  RT @jfcomenale: #SomosTodosMoro \n\nPresidente...    Neutro  rt jfcomenale somostodosmoro presidente do stj...  [rt, jfcomenale, somostodosmoro, presidente, d...  [rt, jfcomenale, somostodosmoro, presidente, s...
1971  Pesco a 40 anos . BSB Country  em Paracatu.\nO...    Neutro  pesco 40 anos bsb country em paracatu rio esta...  [pesco, 40, anos, bsb, country, em, paracatu, ...  [pesco, 40, anos, bsb, country, paracatu, rio,...
8170  Três homens são presos por suspeita de roubo d...  Positivo  três homens são presos por suspeita de roubo d...  [três, homens, são, presos, por, suspeita, de,...  [três, homens, presos, suspeita, roubo, cargas...
2423  RT @AnaPaulaVolei: Mais 2 helicópteros!!A cara...  Negativo  rt anapaulavolei mais 2 helicópteros cara de p...  [rt, anapaulavolei, mais, 2, helicópteros, car...  [rt, anapaulavolei, 2, helicópteros, cara, pau...
7332  RT @OGloboPolitica: Presídio em Minas adota no...  Positivo  rt oglobopolitica presídio em minas adota novo...  [rt, oglobopolitica, presídio, em, minas, adot...  [rt, oglobopolitica, presídio, minas, adota, n...
1090  Estado de calamidade pública está a vida do se...  Negativo  estado de calamidade pública está vida do serv...  [estado, de, calamidade, pública, está, vida, ...  [estado, calamidade, pública, vida, servidor, ...
5154  RT @jornalhojeemdia: Resultado das contas do g...  Positivo  rt jornalhojeemdia resultado das contas do gov...  [rt, jornalhojeemdia, resultado, das, contas, ...  [rt, jornalhojeemdia, resultado, contas, gover...
5259  Fomentar a educação na zona rural de Minas Ger...  Positivo  fomentar educação na zona rural de minas gerai...  [fomentar, educação, na, zona, rural, de, mina...  [fomentar, educação, zona, rural, minas, gerai...
4486  RT @UOLNoticias: Custaram R$ 21,8 milhões: Mes...  Negativo  rt uolnoticias custaram 21 8 milhões mesmo em ...  [rt, uolnoticias, custaram, 21, 8, milhões, me...  [rt, uolnoticias, custaram, 21, 8, milhões, ca...
1198  Governo de MG põe em sigilo dados sobre voos d...  Negativo  governo de mg põe em sigilo dados sobre voos d...  [governo, de, mg, põe, em, sigilo, dados, sobr...  [governo, mg, põe, sigilo, dados, sobre, voos,...
2333  RT @AnaPaulaVolei: Mais 2 helicópteros!!A cara...  Negativo  rt anapaulavolei mais 2 helicópteros cara de p...  [rt, anapaulavolei, mais, 2, helicópteros, car...  [rt, anapaulavolei, 2, helicópteros, cara, pau...
1169  Governador Petista Têm se dedicado ao seu novo...  Negativo  governador petista têm se dedicado ao seu novo...  [governador, petista, têm, se, dedicado, ao, s...  [governador, petista, têm, dedicado, novo, neg...
3682  RT @levantatet5: #LevántateFinal ¿Quién ha est...    Neutro  rt levantatet5 levántatefinal quién ha estado ...  [rt, levantatet5, levántatefinal, quién, ha, e...  [rt, levantatet5, levántatefinal, quién, ha, e...
1064  Escala pagamento IPVA 2017 no Estado de Minas ...    Neutro  escala pagamento ipva 2017 no estado de minas ...  [escala, pagamento, ipva, 2017, no, estado, de...  [escala, pagamento, ipva, 2017, estado, minas,...
5012  A Força Nacional do #SUS reforça ajuda ao esta...  Positivo  a força nacional do sus reforça ajuda ao estad...  [a, força, nacional, do, sus, reforça, ajuda, ...  [força, nacional, sus, reforça, ajuda, estado,...
7236  Presídio em Minas adota novo modelo e consegue...  Positivo  presídio em minas adota novo modelo consegue r...  [presídio, em, minas, adota, novo, modelo, con...  [presídio, minas, adota, novo, modelo, consegu...
3920  RT @oldairt: Rio e Minas Pensei que  estivesse...  Negativo  rt oldairt rio minas pensei que estivessem em ...  [rt, oldairt, rio, minas, pensei, que, estives...  [rt, oldairt, rio, minas, pensei, crise, gover...
6642  RT @JornalOGlobo: Com três anos, presídio priv...  Positivo  rt jornaloglobo com três anos presídio privado...  [rt, jornaloglobo, com, três, anos, presídio, ...  [rt, jornaloglobo, três, anos, presídio, priva...
2385  RT @AnaPaulaVolei: Mais 2 helicópteros!!A cara...  Negativo  rt anapaulavolei mais 2 helicópteros cara de p...  [rt, anapaulavolei, mais, 2, helicópteros, car...  [rt, anapaulavolei, 2, helicópteros, cara, pau...
2854  RT @ceciliedite: Não sei pra quê serve esses v...  Negativo  rt ceciliedite não sei pra quê serve esses ver...  [rt, ceciliedite, não, sei, pra, quê, serve, e...  [rt, ceciliedite, sei, pra, quê, serve, veread...
2796  RT @capslock_io: Governo de Minas Gerais compr...  Negativo  rt capslock_io governo de minas gerais compra ...  [rt, capslock_io, governo, de, minas, gerais, ...  [rt, capslock_io, governo, minas, gerais, comp...
2229  RT @adilsonjr11: Mesmo em calamidade financeir...  Negativo  rt adilsonjr11 mesmo em calamidade financeira ...  [rt, adilsonjr11, mesmo, em, calamidade, finan...  [rt, adilsonjr11, calamidade, financeira, gove...
5549  11,5 MILHÕES DE DOSES\nGoverno vai reforçar es...  Positivo  11 5 milhões de doses governo vai reforçar est...  [11, 5, milhões, de, doses, governo, vai, refo...  [11, 5, milhões, doses, governo, vai, reforçar...
592   BB e governo de Minas travam disputa sobre dep...  Negativo  bb governo de minas travam disputa sobre depós...  [bb, governo, de, minas, travam, disputa, sobr...  [bb, governo, minas, travam, disputa, sobre, d...
1060  Entrará para a história como o pior governador...  Negativo  entrará para história como pior governador de ...  [entrará, para, história, como, pior, governad...  [entrará, história, pior, governador, minas, h...
8126  Quadrilha é presa por tráfico de drogas em Tim...  Positivo  quadrilha é presa por tráfico de drogas em tim...  [quadrilha, é, presa, por, tráfico, de, drogas...  [quadrilha, presa, tráfico, drogas, timóteo, m...
1745  Minas Gerais, melhor estado do Brasil sil sil ...    Neutro  minas gerais melhor estado do brasil sil sil s...  [minas, gerais, melhor, estado, do, brasil, si...  [minas, gerais, melhor, estado, brasil, sil, s...
4165  RT @RevistaISTOE: Mesmo em ‘calamidade finance...  Negativo  rt revistaistoe mesmo em calamidade financeira...  [rt, revistaistoe, mesmo, em, calamidade, fina...  [rt, revistaistoe, calamidade, financeira, gov...
311   2) Vc só percebe isso quando passa anos morand...    Neutro  2 vc só percebe isso quando passa anos morando...  [2, vc, só, percebe, isso, quando, passa, anos...  [2, vc, percebe, passa, anos, morando, estado,...
2353  RT @AnaPaulaVolei: Mais 2 helicópteros!!A cara...  Negativo  rt anapaulavolei mais 2 helicópteros cara de p...  [rt, anapaulavolei, mais, 2, helicópteros, car...  [rt, anapaulavolei, 2, helicópteros, cara, pau...
4503  RT @UOLNoticias: Desastre ambiental em MG: Emp...    Neutro  rt uolnoticias desastre ambiental em mg empres...  [rt, uolnoticias, desastre, ambiental, em, mg,...  [rt, uolnoticias, desastre, ambiental, mg, emp...
5355  Prefeitura de Juiz de Fora divulga convocação ...  Positivo  prefeitura de juiz de fora divulga convocação ...  [prefeitura, de, juiz, de, fora, divulga, conv...  [prefeitura, juiz, divulga, convocação, educaç...
6374  Jovem é preso suspeito de violência doméstica ...  Positivo  jovem é preso suspeito de violência doméstica ...  [jovem, é, preso, suspeito, de, violência, dom...  [jovem, preso, suspeito, violência, doméstica,...
1104  Estos wachins q le dan mg al estado\nUn bife a...    Neutro  estos wachins le dan mg al estado un bife cada...  [estos, wachins, le, dan, mg, al, estado, un, ...  [estos, wachins, le, dan, mg, al, estado, un, ...
513   BB avisa Justiça que governo de MG não tem rec...  Negativo  bb avisa justiça que governo de mg não tem rec...  [bb, avisa, justiça, que, governo, de, mg, não...  [bb, avisa, justiça, governo, mg, recursos, co...
2298  RT @AnaPaulaVolei: Mais 2 helicópteros!!A cara...  Negativo  rt anapaulavolei mais 2 helicópteros cara de p...  [rt, anapaulavolei, mais, 2, helicópteros, car...  [rt, anapaulavolei, 2, helicópteros, cara, pau...
[2021-07-18 14:23:15+0000] INFO - prefect.TaskRunner | Task 'task_print': Finished task run for task with final state: 'Success'
[2021-07-18 14:23:15+0000] INFO - prefect.TaskRunner | Task 'splitting': Starting task run...
[2021-07-18 14:23:15+0000] INFO - prefect.TaskRunner | Task 'splitting': Finished task run for task with final state: 'Success'
[2021-07-18 14:23:15+0000] INFO - prefect.TaskRunner | Task 'splitting[0]': Starting task run...
[2021-07-18 14:23:15+0000] INFO - prefect.TaskRunner | Task 'splitting[0]': Finished task run for task with final state: 'Success'
[2021-07-18 14:23:15+0000] INFO - prefect.TaskRunner | Task 'splitting[1]': Starting task run...
[2021-07-18 14:23:15+0000] INFO - prefect.TaskRunner | Task 'splitting[1]': Finished task run for task with final state: 'Success'
[2021-07-18 14:23:15+0000] INFO - prefect.TaskRunner | Task 'splitting[2]': Starting task run...
[2021-07-18 14:23:15+0000] INFO - prefect.TaskRunner | Task 'splitting[2]': Finished task run for task with final state: 'Success'
[2021-07-18 14:23:15+0000] INFO - prefect.TaskRunner | Task 'model': Starting task run...
Fitting 5 folds for each of 10 candidates, totalling 50 fits
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=30.0, model__max_leaf_nodes=64, model__n_estimators=900, model__oob_score=True; total time=   1.5s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=30.0, model__max_leaf_nodes=64, model__n_estimators=900, model__oob_score=True; total time=   1.7s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=30.0, model__max_leaf_nodes=64, model__n_estimators=900, model__oob_score=True; total time=   1.5s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=30.0, model__max_leaf_nodes=64, model__n_estimators=900, model__oob_score=True; total time=   1.6s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=30.0, model__max_leaf_nodes=64, model__n_estimators=900, model__oob_score=True; total time=   1.7s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=7.0, model__max_leaf_nodes=128, model__n_estimators=200, model__oob_score=True; total time=   0.4s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=7.0, model__max_leaf_nodes=128, model__n_estimators=200, model__oob_score=True; total time=   0.4s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=7.0, model__max_leaf_nodes=128, model__n_estimators=200, model__oob_score=True; total time=   0.4s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=7.0, model__max_leaf_nodes=128, model__n_estimators=200, model__oob_score=True; total time=   0.4s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=7.0, model__max_leaf_nodes=128, model__n_estimators=200, model__oob_score=True; total time=   0.4s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=31.0, model__max_leaf_nodes=64, model__n_estimators=800, model__oob_score=True; total time=   1.4s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=31.0, model__max_leaf_nodes=64, model__n_estimators=800, model__oob_score=True; total time=   1.3s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=31.0, model__max_leaf_nodes=64, model__n_estimators=800, model__oob_score=True; total time=   1.4s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=31.0, model__max_leaf_nodes=64, model__n_estimators=800, model__oob_score=True; total time=   1.6s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=31.0, model__max_leaf_nodes=64, model__n_estimators=800, model__oob_score=True; total time=   1.7s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=26.0, model__max_leaf_nodes=16, model__n_estimators=600, model__oob_score=True; total time=   1.1s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=26.0, model__max_leaf_nodes=16, model__n_estimators=600, model__oob_score=True; total time=   1.1s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=26.0, model__max_leaf_nodes=16, model__n_estimators=600, model__oob_score=True; total time=   1.1s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=26.0, model__max_leaf_nodes=16, model__n_estimators=600, model__oob_score=True; total time=   1.1s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=26.0, model__max_leaf_nodes=16, model__n_estimators=600, model__oob_score=True; total time=   1.1s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=27.0, model__max_leaf_nodes=128, model__n_estimators=700, model__oob_score=True; total time=   1.2s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=27.0, model__max_leaf_nodes=128, model__n_estimators=700, model__oob_score=True; total time=   1.2s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=27.0, model__max_leaf_nodes=128, model__n_estimators=700, model__oob_score=True; total time=   1.1s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=27.0, model__max_leaf_nodes=128, model__n_estimators=700, model__oob_score=True; total time=   1.2s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=27.0, model__max_leaf_nodes=128, model__n_estimators=700, model__oob_score=True; total time=   1.2s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=5.0, model__max_leaf_nodes=16, model__n_estimators=100, model__oob_score=True; total time=   0.2s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=5.0, model__max_leaf_nodes=16, model__n_estimators=100, model__oob_score=True; total time=   0.2s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=5.0, model__max_leaf_nodes=16, model__n_estimators=100, model__oob_score=True; total time=   0.2s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=5.0, model__max_leaf_nodes=16, model__n_estimators=100, model__oob_score=True; total time=   0.2s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=5.0, model__max_leaf_nodes=16, model__n_estimators=100, model__oob_score=True; total time=   0.2s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=4.0, model__max_leaf_nodes=128, model__n_estimators=400, model__oob_score=True; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=4.0, model__max_leaf_nodes=128, model__n_estimators=400, model__oob_score=True; total time=   0.7s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=4.0, model__max_leaf_nodes=128, model__n_estimators=400, model__oob_score=True; total time=   0.7s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=4.0, model__max_leaf_nodes=128, model__n_estimators=400, model__oob_score=True; total time=   0.8s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=4.0, model__max_leaf_nodes=128, model__n_estimators=400, model__oob_score=True; total time=   0.7s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=entropy, model__max_depth=2.0, model__max_leaf_nodes=64, model__n_estimators=600, model__oob_score=True; total time=   1.1s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=entropy, model__max_depth=2.0, model__max_leaf_nodes=64, model__n_estimators=600, model__oob_score=True; total time=   1.0s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=entropy, model__max_depth=2.0, model__max_leaf_nodes=64, model__n_estimators=600, model__oob_score=True; total time=   0.9s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=entropy, model__max_depth=2.0, model__max_leaf_nodes=64, model__n_estimators=600, model__oob_score=True; total time=   1.0s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=entropy, model__max_depth=2.0, model__max_leaf_nodes=64, model__n_estimators=600, model__oob_score=True; total time=   1.0s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=entropy, model__max_depth=5.0, model__max_leaf_nodes=16, model__n_estimators=500, model__oob_score=True; total time=   0.9s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=entropy, model__max_depth=5.0, model__max_leaf_nodes=16, model__n_estimators=500, model__oob_score=True; total time=   0.8s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=entropy, model__max_depth=5.0, model__max_leaf_nodes=16, model__n_estimators=500, model__oob_score=True; total time=   0.8s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=entropy, model__max_depth=5.0, model__max_leaf_nodes=16, model__n_estimators=500, model__oob_score=True; total time=   0.9s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=entropy, model__max_depth=5.0, model__max_leaf_nodes=16, model__n_estimators=500, model__oob_score=True; total time=   0.9s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=entropy, model__max_depth=4.0, model__max_leaf_nodes=128, model__n_estimators=100, model__oob_score=True; total time=   0.2s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=entropy, model__max_depth=4.0, model__max_leaf_nodes=128, model__n_estimators=100, model__oob_score=True; total time=   0.2s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=entropy, model__max_depth=4.0, model__max_leaf_nodes=128, model__n_estimators=100, model__oob_score=True; total time=   0.2s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=entropy, model__max_depth=4.0, model__max_leaf_nodes=128, model__n_estimators=100, model__oob_score=True; total time=   0.2s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=entropy, model__max_depth=4.0, model__max_leaf_nodes=128, model__n_estimators=100, model__oob_score=True; total time=   0.2s
[2021-07-18 14:23:59+0000] INFO - prefect.TaskRunner | Task 'model': Finished task run for task with final state: 'Success'
[2021-07-18 14:23:59+0000] INFO - prefect.TaskRunner | Task 'model[1]': Starting task run...
[2021-07-18 14:23:59+0000] INFO - prefect.TaskRunner | Task 'model[1]': Finished task run for task with final state: 'Success'
[2021-07-18 14:23:59+0000] INFO - prefect.TaskRunner | Task 'model[0]': Starting task run...
[2021-07-18 14:23:59+0000] INFO - prefect.TaskRunner | Task 'model[0]': Finished task run for task with final state: 'Success'
[2021-07-18 14:23:59+0000] INFO - prefect.TaskRunner | Task 'model[3]': Starting task run...
[2021-07-18 14:23:59+0000] INFO - prefect.TaskRunner | Task 'model[3]': Finished task run for task with final state: 'Success'
[2021-07-18 14:23:59+0000] INFO - prefect.TaskRunner | Task 'model[0]['actual']': Starting task run...
[2021-07-18 14:23:59+0000] INFO - prefect.TaskRunner | Task 'model[0]['actual']': Finished task run for task with final state: 'Success'
[2021-07-18 14:23:59+0000] INFO - prefect.TaskRunner | Task 'model[2]': Starting task run...
[2021-07-18 14:23:59+0000] INFO - prefect.TaskRunner | Task 'model[2]': Finished task run for task with final state: 'Success'
[2021-07-18 14:23:59+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Starting task run...
[2021-07-18 14:23:59+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Finished task run for task with final state: 'Success'
[2021-07-18 14:23:59+0000] INFO - prefect.TaskRunner | Task 'model[1]['pred']': Starting task run...
[2021-07-18 14:23:59+0000] INFO - prefect.TaskRunner | Task 'model[1]['pred']': Finished task run for task with final state: 'Success'
[2021-07-18 14:23:59+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Starting task run...
[2021-07-18 14:23:59+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Finished task run for task with final state: 'Success'
[2021-07-18 14:23:59+0000] INFO - prefect.TaskRunner | Task 'model[1]['actual']': Starting task run...
[2021-07-18 14:23:59+0000] INFO - prefect.TaskRunner | Task 'model[1]['actual']': Finished task run for task with final state: 'Success'
[2021-07-18 14:23:59+0000] INFO - prefect.TaskRunner | Task 'model[2]['pred']': Starting task run...
[2021-07-18 14:23:59+0000] INFO - prefect.TaskRunner | Task 'model[2]['pred']': Finished task run for task with final state: 'Success'
[2021-07-18 14:23:59+0000] INFO - prefect.TaskRunner | Task 'performance': Starting task run...
[2021-07-18 14:23:59+0000] INFO - prefect.TaskRunner | Task 'performance': Finished task run for task with final state: 'Success'
[2021-07-18 14:23:59+0000] INFO - prefect.TaskRunner | Task 'model[2]['actual']': Starting task run...
[2021-07-18 14:23:59+0000] INFO - prefect.TaskRunner | Task 'model[2]['actual']': Finished task run for task with final state: 'Success'
[2021-07-18 14:23:59+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Starting task run...
[2021-07-18 14:23:59+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Finished task run for task with final state: 'Success'
[2021-07-18 14:23:59+0000] INFO - prefect.TaskRunner | Task 'model[0]['pred']': Starting task run...
[2021-07-18 14:23:59+0000] INFO - prefect.TaskRunner | Task 'model[0]['pred']': Finished task run for task with final state: 'Success'
[2021-07-18 14:23:59+0000] INFO - prefect.TaskRunner | Task 'performance': Starting task run...
[2021-07-18 14:23:59+0000] INFO - prefect.TaskRunner | Task 'performance': Finished task run for task with final state: 'Success'
[2021-07-18 14:23:59+0000] INFO - prefect.TaskRunner | Task 'performance': Starting task run...
[2021-07-18 14:23:59+0000] INFO - prefect.TaskRunner | Task 'performance': Finished task run for task with final state: 'Success'
[2021-07-18 14:23:59+0000] INFO - prefect.FlowRunner | Flow run SUCCESS: all reference tasks succeeded
Sun Jul 18 11:05:30 PM -03 2021
Creating py-greenhouse_run_run ... 
Creating py-greenhouse_run_run ... done
[nltk_data] Downloading package stopwords to /root/nltk_data...
[nltk_data]   Unzipping corpora/stopwords.zip.
[nltk_data] Downloading package punkt to /root/nltk_data...
[nltk_data]   Unzipping tokenizers/punkt.zip.
[2021-07-19 02:05:36+0000] INFO - prefect.FlowRunner | Beginning Flow run for 'greenhouse'
[2021-07-19 02:05:36+0000] INFO - prefect.TaskRunner | Task 'sourcing': Starting task run...
[2021-07-19 02:05:36+0000] INFO - prefect.TaskRunner | Task 'sourcing': Finished task run for task with final state: 'Success'
[2021-07-19 02:05:36+0000] INFO - prefect.TaskRunner | Task 'cleansing': Starting task run...
[2021-07-19 02:05:36+0000] INFO - prefect.TaskRunner | Task 'cleansing': Finished task run for task with final state: 'Success'
[2021-07-19 02:05:36+0000] INFO - prefect.TaskRunner | Task 'tokenizing': Starting task run...
[2021-07-19 02:05:36+0000] INFO - prefect.TaskRunner | Task 'tokenizing': Finished task run for task with final state: 'Success'
[2021-07-19 02:05:36+0000] INFO - prefect.TaskRunner | Task 'stop_words': Starting task run...
[2021-07-19 02:05:36+0000] INFO - prefect.TaskRunner | Task 'stop_words': Finished task run for task with final state: 'Success'
[2021-07-19 02:05:36+0000] INFO - prefect.TaskRunner | Task 'task_print': Starting task run...
[2021-07-19 02:05:36+0000] INFO - prefect.TaskRunner |                                                    text      cats                                         clean_text                                             tokens                                        tokens_wosw
1392  I'm at Giorgio Gastrô in Governador Valadares,...    Neutro  i at giorgio gastrô in governador valadares mg...  [i, at, giorgio, gastrô, in, governador, valad...  [i, at, giorgio, gastrô, in, governador, valad...
7778  Caminhoneiro suspeito de forjar roubo de carga...  Positivo  caminhoneiro suspeito de forjar roubo de carga...  [caminhoneiro, suspeito, de, forjar, roubo, de...  [caminhoneiro, suspeito, forjar, roubo, carga,...
3727  RT @MarKramer: Assim são os gov PT O povo? Ral...  Negativo  rt markramer assim são os gov pt povo rale se ...  [rt, markramer, assim, são, os, gov, pt, povo,...  [rt, markramer, assim, gov, pt, povo, rale, ca...
6630  RT @JornalOGlobo: Com três anos, presídio priv...  Positivo  rt jornaloglobo com três anos presídio privado...  [rt, jornaloglobo, com, três, anos, presídio, ...  [rt, jornaloglobo, três, anos, presídio, priva...
103   #road #trip #mg #car #gopro @ Governador Valad...    Neutro   road trip mg car gopro governador valadares m...  [road, trip, mg, car, gopro, governador, valad...  [road, trip, mg, car, gopro, governador, valad...
3373  RT @frednavarro: O governador Fernando Pimente...  Negativo  rt frednavarro governador fernando pimentel pt...  [rt, frednavarro, governador, fernando, piment...  [rt, frednavarro, governador, fernando, piment...
7954  Polícia apreende drogas e prende traficante em...  Positivo  polícia apreende drogas prende traficante em s...  [polícia, apreende, drogas, prende, traficante...  [polícia, apreende, drogas, prende, traficante...
1525  Jovem fica ferido após ser torturado em Govern...    Neutro  jovem fica ferido após ser torturado em govern...  [jovem, fica, ferido, após, ser, torturado, em...  [jovem, fica, ferido, após, ser, torturado, go...
3619  RT @josetomazfilho: BB avisa Justiça que gover...  Negativo  rt josetomazfilho bb avisa justiça que governo...  [rt, josetomazfilho, bb, avisa, justiça, que, ...  [rt, josetomazfilho, bb, avisa, justiça, gover...
4301  RT @tvglobominas: Prefeito de Ribeirão das Nev...    Neutro  rt tvglobominas prefeito de ribeirão das neves...  [rt, tvglobominas, prefeito, de, ribeirão, das...  [rt, tvglobominas, prefeito, ribeirão, neves, ...
7553  RT @timbetassssssss: Assaltante é baleado por ...  Positivo  rt timbetassssssss assaltante é baleado por cl...  [rt, timbetassssssss, assaltante, é, baleado, ...  [rt, timbetassssssss, assaltante, baleado, cli...
8014  Polícia em MG apresenta rapaz que recebia drog...  Positivo  polícia em mg apresenta rapaz que recebia drog...  [polícia, em, mg, apresenta, rapaz, que, receb...  [polícia, mg, apresenta, rapaz, recebia, droga...
4038  RT @Rede45: Em meio à calamidade financeira, P...  Negativo  rt rede45 em meio à calamidade financeira pime...  [rt, rede45, em, meio, à, calamidade, financei...  [rt, rede45, meio, calamidade, financeira, pim...
4260  RT @sytambalejy: I'm at Salão do Samuca in Gov...    Neutro  rt sytambalejy m at salão do samuca in governa...  [rt, sytambalejy, m, at, salão, do, samuca, in...  [rt, sytambalejy, m, at, salão, samuca, in, go...
39    #beta #betalab #mg Ex-ministro e outros: Servi...    Neutro   beta betalab mg ex ministro outros servidores...  [beta, betalab, mg, ex, ministro, outros, serv...  [beta, betalab, mg, ex, ministro, outros, serv...
7920  Perigoso traficante é preso em Ipaba, MG https...  Positivo  perigoso traficante é preso em ipaba mg https ...  [perigoso, traficante, é, preso, em, ipaba, mg...  [perigoso, traficante, preso, ipaba, mg, https...
4589  RT @VEJA: Em calamidade financeira, governo de...  Negativo  rt veja em calamidade financeira governo de mg...  [rt, veja, em, calamidade, financeira, governo...  [rt, veja, calamidade, financeira, governo, mg...
2213  RT @Adri7isidro: Vendo iPhone 6 en perfecto es...    Neutro  rt adri7isidro vendo iphone 6 en perfecto esta...  [rt, adri7isidro, vendo, iphone, 6, en, perfec...  [rt, adri7isidro, vendo, iphone, 6, en, perfec...
7220  Presos por roubo à casa em Juiz de Fora têm hi...  Positivo  presos por roubo à casa em juiz de fora têm hi...  [presos, por, roubo, à, casa, em, juiz, de, fo...  [presos, roubo, casa, juiz, têm, histórico, cr...
783   Defesa Civil de MG confirma 16ª morte pela chu...    Neutro  defesa civil de mg confirma 16ª morte pela chu...  [defesa, civil, de, mg, confirma, 16ª, morte, ...  [defesa, civil, mg, confirma, 16ª, morte, chuv...
2079  Presidente do STJ mantém preso ex-subsecretári...    Neutro  presidente do stj mantém preso ex subsecretári...  [presidente, do, stj, mantém, preso, ex, subse...  [presidente, stj, mantém, preso, ex, subsecret...
8098  Três homens são presos por suspeita de roubo d...  Positivo  três homens são presos por suspeita de roubo d...  [três, homens, são, presos, por, suspeita, de,...  [três, homens, presos, suspeita, roubo, cargas...
3227  RT @exame: Em calamidade financeira, governo d...  Negativo  rt exame em calamidade financeira governo de m...  [rt, exame, em, calamidade, financeira, govern...  [rt, exame, calamidade, financeira, governo, m...
161   @diogo_cc estou hahahaha mas trabalho mais pro...    Neutro   diogo_cc estou hahahaha mas trabalho mais pro...  [diogo_cc, estou, hahahaha, mas, trabalho, mai...  [diogo_cc, hahahaha, trabalho, pro, impresso, ...
7982  Polícia Civil flagra entrega de drogas e celul...  Positivo  polícia civil flagra entrega de drogas celular...  [polícia, civil, flagra, entrega, de, drogas, ...  [polícia, civil, flagra, entrega, drogas, celu...
5834  Araxá recebe novas doses da vacina contra febr...  Positivo  araxá recebe novas doses da vacina contra febr...  [araxá, recebe, novas, doses, da, vacina, cont...  [araxá, recebe, novas, doses, vacina, contra, ...
6086  @PMMG190 - ITABIRA - PM prende autores de roub...  Positivo   pmmg190 itabira pm prende autores de roubo na...  [pmmg190, itabira, pm, prende, autores, de, ro...  [pmmg190, itabira, pm, prende, autores, roubo,...
5390  Governo anuncia ensino integral em três escola...  Positivo  governo anuncia ensino integral em três escola...  [governo, anuncia, ensino, integral, em, três,...  [governo, anuncia, ensino, integral, três, esc...
5517  A Secretaria de Estado de Saúde apresentou na ...  Positivo  a secretaria de estado de saúde apresentou na ...  [a, secretaria, de, estado, de, saúde, apresen...  [secretaria, estado, saúde, apresentou, manhã,...
444   Atirador mata cinco e fere oito em aeroporto d...    Neutro  atirador mata cinco fere oito em aeroporto de ...  [atirador, mata, cinco, fere, oito, em, aeropo...  [atirador, mata, cinco, fere, oito, aeroporto,...
6777  #timbeta #globo Dois homens são preso após rou...  Positivo   timbeta globo dois homens são preso após roub...  [timbeta, globo, dois, homens, são, preso, apó...  [timbeta, globo, dois, homens, preso, após, ro...
751   Custaram R$ 21,8 milhões: Mesmo em calamidade,...  Negativo  custaram 21 8 milhões mesmo em calamidade gove...  [custaram, 21, 8, milhões, mesmo, em, calamida...  [custaram, 21, 8, milhões, calamidade, governo...
3247  RT @exame: Em calamidade financeira, governo d...  Negativo  rt exame em calamidade financeira governo de m...  [rt, exame, em, calamidade, financeira, govern...  [rt, exame, calamidade, financeira, governo, m...
4769  Superávit comercial da Alemanha sobe a 21,7 bi...    Neutro  superávit comercial da alemanha sobe 21 7 bilh...  [superávit, comercial, da, alemanha, sobe, 21,...  [superávit, comercial, alemanha, sobe, 21, 7, ...
5205  RT @NilmaAguiar: Dos grandes centros.O estado ...  Positivo  rt nilmaaguiar dos grandes centros estado em m...  [rt, nilmaaguiar, dos, grandes, centros, estad...  [rt, nilmaaguiar, grandes, centros, estado, me...
4017  RT @radioitatiaia: Mesmo em 'calamidade financ...  Negativo  rt radioitatiaia mesmo em calamidade financeir...  [rt, radioitatiaia, mesmo, em, calamidade, fin...  [rt, radioitatiaia, calamidade, financeira, go...
5182  RT @caminhodaescola: @CNHIndustrial entrega 62...  Positivo  rt caminhodaescola cnhindustrial entrega 628 ô...  [rt, caminhodaescola, cnhindustrial, entrega, ...  [rt, caminhodaescola, cnhindustrial, entrega, ...
644   Cinco presos fogem de cadeia em Minas armados ...    Neutro  cinco presos fogem de cadeia em minas armados ...  [cinco, presos, fogem, de, cadeia, em, minas, ...  [cinco, presos, fogem, cadeia, minas, armados,...
4530  RT @VEJA: Em calamidade financeira, governo de...  Negativo  rt veja em calamidade financeira governo de mg...  [rt, veja, em, calamidade, financeira, governo...  [rt, veja, calamidade, financeira, governo, mg...
5992  Vacinação contra febre amarela é intensificada...  Positivo  vacinação contra febre amarela é intensificada...  [vacinação, contra, febre, amarela, é, intensi...  [vacinação, contra, febre, amarela, intensific...
2746  RT @CAASCORPION: Depois de decretar “calamidad...  Negativo  rt caascorpion depois de decretar calamidade f...  [rt, caascorpion, depois, de, decretar, calami...  [rt, caascorpion, decretar, calamidade, financ...
2008  Postos dos Sine oferecem mais de 1.500 vagas d...    Neutro  postos dos sine oferecem mais de 1 500 vagas d...  [postos, dos, sine, oferecem, mais, de, 1, 500...  [postos, sine, oferecem, 1, 500, vagas, empreg...
1139  Governador de Minas usa helicóptero do Estado ...  Negativo  governador de minas usa helicóptero do estado ...  [governador, de, minas, usa, helicóptero, do, ...  [governador, minas, usa, helicóptero, estado, ...
1379  I'm at Doutor Lund in Doutor Lund, Estado de M...    Neutro  i at doutor lund in doutor lund estado de mina...  [i, at, doutor, lund, in, doutor, lund, estado...  [i, at, doutor, lund, in, doutor, lund, estado...
3903  RT @OrganizadAntiPT: Mesmo em calamidade finan...  Negativo  rt organizadantipt mesmo em calamidade finance...  [rt, organizadantipt, mesmo, em, calamidade, f...  [rt, organizadantipt, calamidade, financeira, ...
3531  RT @JBarbosa2014: A FÓRMULA DO FRACASSO:\nO go...  Negativo  rt jbarbosa2014 fórmula do fracasso governo pe...  [rt, jbarbosa2014, fórmula, do, fracasso, gove...  [rt, jbarbosa2014, fórmula, fracasso, governo,...
5296  O Governo de #Minas vai liberar R$ 770.452,56 ...  Positivo  o governo de minas vai liberar 770 452 56 para...  [o, governo, de, minas, vai, liberar, 770, 452...  [governo, minas, vai, liberar, 770, 452, 56, o...
6763  Três são presos após furto a loja em shopping ...  Positivo  três são presos após furto loja em shopping de...  [três, são, presos, após, furto, loja, em, sho...  [três, presos, após, furto, loja, shopping, va...
2354  RT @AnaPaulaVolei: Mais 2 helicópteros!!A cara...  Negativo  rt anapaulavolei mais 2 helicópteros cara de p...  [rt, anapaulavolei, mais, 2, helicópteros, car...  [rt, anapaulavolei, 2, helicópteros, cara, pau...
6566  RT @fera2k: Presídio privado em Minas Gerais n...  Positivo  rt fera2k presídio privado em minas gerais nun...  [rt, fera2k, presídio, privado, em, minas, ger...  [rt, fera2k, presídio, privado, minas, gerais,...
[2021-07-19 02:05:36+0000] INFO - prefect.TaskRunner | Task 'task_print': Finished task run for task with final state: 'Success'
[2021-07-19 02:05:36+0000] INFO - prefect.TaskRunner | Task 'splitting': Starting task run...
[2021-07-19 02:05:36+0000] INFO - prefect.TaskRunner | Task 'splitting': Finished task run for task with final state: 'Success'
[2021-07-19 02:05:36+0000] INFO - prefect.TaskRunner | Task 'splitting[0]': Starting task run...
[2021-07-19 02:05:36+0000] INFO - prefect.TaskRunner | Task 'splitting[0]': Finished task run for task with final state: 'Success'
[2021-07-19 02:05:37+0000] INFO - prefect.TaskRunner | Task 'splitting[1]': Starting task run...
[2021-07-19 02:05:37+0000] INFO - prefect.TaskRunner | Task 'splitting[1]': Finished task run for task with final state: 'Success'
[2021-07-19 02:05:37+0000] INFO - prefect.TaskRunner | Task 'splitting[2]': Starting task run...
[2021-07-19 02:05:37+0000] INFO - prefect.TaskRunner | Task 'splitting[2]': Finished task run for task with final state: 'Success'
[2021-07-19 02:05:37+0000] INFO - prefect.TaskRunner | Task 'model': Starting task run...
Fitting 5 folds for each of 10 candidates, totalling 50 fits
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=28.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=28.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=28.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=28.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=28.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=4.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=4.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=4.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=4.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=4.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=23.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=23.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=23.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=23.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=23.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=19.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=19.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=19.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=19.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=19.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=24.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=24.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=24.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=24.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=24.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=18.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=18.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=18.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=18.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=18.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=22.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=22.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=22.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=22.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=22.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=29.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=29.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=29.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=29.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=29.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=20.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=20.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=20.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=20.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=20.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=15.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=15.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=15.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=15.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=15.0; total time=   0.1s
[2021-07-19 02:05:43+0000] ERROR - prefect.TaskRunner | Unexpected error: TypeError('can only concatenate str (not "int") to str')
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/site-packages/prefect/engine/runner.py", line 48, in inner
    new_state = method(self, state, *args, **kwargs)
  File "/usr/local/lib/python3.9/site-packages/prefect/engine/task_runner.py", line 865, in get_task_run_state
    value = prefect.utilities.executors.run_task_with_timeout(
  File "/usr/local/lib/python3.9/site-packages/prefect/utilities/executors.py", line 299, in run_task_with_timeout
    return task.run(*args, **kwargs)  # type: ignore
  File "/usr/app/src/main.py", line 148, in model
    model.fit(train, y_col, x_col)
  File "/usr/app/src/modeling.py", line 75, in fit
    joblib.dump(self.pipe, "/usr/app/models/" + self.model_id+ ".joblib")
TypeError: can only concatenate str (not "int") to str
[2021-07-19 02:05:43+0000] INFO - prefect.TaskRunner | Task 'model': Finished task run for task with final state: 'Failed'
[2021-07-19 02:05:43+0000] INFO - prefect.TaskRunner | Task 'model[3]': Starting task run...
[2021-07-19 02:05:43+0000] INFO - prefect.TaskRunner | Task 'model[3]': Finished task run for task with final state: 'TriggerFailed'
[2021-07-19 02:05:43+0000] INFO - prefect.TaskRunner | Task 'model[2]': Starting task run...
[2021-07-19 02:05:43+0000] INFO - prefect.TaskRunner | Task 'model[2]': Finished task run for task with final state: 'TriggerFailed'
[2021-07-19 02:05:43+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Starting task run...
[2021-07-19 02:05:43+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Finished task run for task with final state: 'TriggerFailed'
[2021-07-19 02:05:43+0000] INFO - prefect.TaskRunner | Task 'model[2]['actual']': Starting task run...
[2021-07-19 02:05:43+0000] INFO - prefect.TaskRunner | Task 'model[2]['actual']': Finished task run for task with final state: 'TriggerFailed'
[2021-07-19 02:05:43+0000] INFO - prefect.TaskRunner | Task 'model[2]['pred']': Starting task run...
[2021-07-19 02:05:43+0000] INFO - prefect.TaskRunner | Task 'model[2]['pred']': Finished task run for task with final state: 'TriggerFailed'
[2021-07-19 02:05:43+0000] INFO - prefect.TaskRunner | Task 'model[1]': Starting task run...
[2021-07-19 02:05:43+0000] INFO - prefect.TaskRunner | Task 'model[1]': Finished task run for task with final state: 'TriggerFailed'
[2021-07-19 02:05:43+0000] INFO - prefect.TaskRunner | Task 'performance': Starting task run...
[2021-07-19 02:05:43+0000] INFO - prefect.TaskRunner | Task 'performance': Finished task run for task with final state: 'TriggerFailed'
[2021-07-19 02:05:43+0000] INFO - prefect.TaskRunner | Task 'model[0]': Starting task run...
[2021-07-19 02:05:43+0000] INFO - prefect.TaskRunner | Task 'model[0]': Finished task run for task with final state: 'TriggerFailed'
[2021-07-19 02:05:43+0000] INFO - prefect.TaskRunner | Task 'model[1]['pred']': Starting task run...
[2021-07-19 02:05:43+0000] INFO - prefect.TaskRunner | Task 'model[1]['pred']': Finished task run for task with final state: 'TriggerFailed'
[2021-07-19 02:05:43+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Starting task run...
[2021-07-19 02:05:43+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Finished task run for task with final state: 'TriggerFailed'
[2021-07-19 02:05:43+0000] INFO - prefect.TaskRunner | Task 'model[0]['actual']': Starting task run...
[2021-07-19 02:05:43+0000] INFO - prefect.TaskRunner | Task 'model[0]['actual']': Finished task run for task with final state: 'TriggerFailed'
[2021-07-19 02:05:43+0000] INFO - prefect.TaskRunner | Task 'model[0]['pred']': Starting task run...
[2021-07-19 02:05:43+0000] INFO - prefect.TaskRunner | Task 'model[0]['pred']': Finished task run for task with final state: 'TriggerFailed'
[2021-07-19 02:05:43+0000] INFO - prefect.TaskRunner | Task 'model[1]['actual']': Starting task run...
[2021-07-19 02:05:43+0000] INFO - prefect.TaskRunner | Task 'model[1]['actual']': Finished task run for task with final state: 'TriggerFailed'
[2021-07-19 02:05:44+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Starting task run...
[2021-07-19 02:05:44+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Finished task run for task with final state: 'TriggerFailed'
[2021-07-19 02:05:44+0000] INFO - prefect.TaskRunner | Task 'performance': Starting task run...
[2021-07-19 02:05:44+0000] INFO - prefect.TaskRunner | Task 'performance': Finished task run for task with final state: 'TriggerFailed'
[2021-07-19 02:05:44+0000] INFO - prefect.TaskRunner | Task 'performance': Starting task run...
[2021-07-19 02:05:44+0000] INFO - prefect.TaskRunner | Task 'performance': Finished task run for task with final state: 'TriggerFailed'
[2021-07-19 02:05:44+0000] INFO - prefect.FlowRunner | Flow run FAILED: some reference tasks failed.
Sun Jul 18 11:06:17 PM -03 2021
Creating py-greenhouse_run_run ... 
Creating py-greenhouse_run_run ... done
[nltk_data] Downloading package stopwords to /root/nltk_data...
[nltk_data]   Unzipping corpora/stopwords.zip.
[nltk_data] Downloading package punkt to /root/nltk_data...
[nltk_data]   Unzipping tokenizers/punkt.zip.
[2021-07-19 02:06:21+0000] INFO - prefect.FlowRunner | Beginning Flow run for 'greenhouse'
[2021-07-19 02:06:21+0000] INFO - prefect.TaskRunner | Task 'sourcing': Starting task run...
[2021-07-19 02:06:21+0000] INFO - prefect.TaskRunner | Task 'sourcing': Finished task run for task with final state: 'Success'
[2021-07-19 02:06:21+0000] INFO - prefect.TaskRunner | Task 'cleansing': Starting task run...
[2021-07-19 02:06:21+0000] INFO - prefect.TaskRunner | Task 'cleansing': Finished task run for task with final state: 'Success'
[2021-07-19 02:06:21+0000] INFO - prefect.TaskRunner | Task 'tokenizing': Starting task run...
[2021-07-19 02:06:21+0000] INFO - prefect.TaskRunner | Task 'tokenizing': Finished task run for task with final state: 'Success'
[2021-07-19 02:06:21+0000] INFO - prefect.TaskRunner | Task 'stop_words': Starting task run...
[2021-07-19 02:06:21+0000] INFO - prefect.TaskRunner | Task 'stop_words': Finished task run for task with final state: 'Success'
[2021-07-19 02:06:21+0000] INFO - prefect.TaskRunner | Task 'task_print': Starting task run...
[2021-07-19 02:06:21+0000] INFO - prefect.TaskRunner |                                                    text      cats                                         clean_text                                             tokens                                        tokens_wosw
1392  I'm at Giorgio Gastrô in Governador Valadares,...    Neutro  i at giorgio gastrô in governador valadares mg...  [i, at, giorgio, gastrô, in, governador, valad...  [i, at, giorgio, gastrô, in, governador, valad...
7778  Caminhoneiro suspeito de forjar roubo de carga...  Positivo  caminhoneiro suspeito de forjar roubo de carga...  [caminhoneiro, suspeito, de, forjar, roubo, de...  [caminhoneiro, suspeito, forjar, roubo, carga,...
3727  RT @MarKramer: Assim são os gov PT O povo? Ral...  Negativo  rt markramer assim são os gov pt povo rale se ...  [rt, markramer, assim, são, os, gov, pt, povo,...  [rt, markramer, assim, gov, pt, povo, rale, ca...
6630  RT @JornalOGlobo: Com três anos, presídio priv...  Positivo  rt jornaloglobo com três anos presídio privado...  [rt, jornaloglobo, com, três, anos, presídio, ...  [rt, jornaloglobo, três, anos, presídio, priva...
103   #road #trip #mg #car #gopro @ Governador Valad...    Neutro   road trip mg car gopro governador valadares m...  [road, trip, mg, car, gopro, governador, valad...  [road, trip, mg, car, gopro, governador, valad...
3373  RT @frednavarro: O governador Fernando Pimente...  Negativo  rt frednavarro governador fernando pimentel pt...  [rt, frednavarro, governador, fernando, piment...  [rt, frednavarro, governador, fernando, piment...
7954  Polícia apreende drogas e prende traficante em...  Positivo  polícia apreende drogas prende traficante em s...  [polícia, apreende, drogas, prende, traficante...  [polícia, apreende, drogas, prende, traficante...
1525  Jovem fica ferido após ser torturado em Govern...    Neutro  jovem fica ferido após ser torturado em govern...  [jovem, fica, ferido, após, ser, torturado, em...  [jovem, fica, ferido, após, ser, torturado, go...
3619  RT @josetomazfilho: BB avisa Justiça que gover...  Negativo  rt josetomazfilho bb avisa justiça que governo...  [rt, josetomazfilho, bb, avisa, justiça, que, ...  [rt, josetomazfilho, bb, avisa, justiça, gover...
4301  RT @tvglobominas: Prefeito de Ribeirão das Nev...    Neutro  rt tvglobominas prefeito de ribeirão das neves...  [rt, tvglobominas, prefeito, de, ribeirão, das...  [rt, tvglobominas, prefeito, ribeirão, neves, ...
7553  RT @timbetassssssss: Assaltante é baleado por ...  Positivo  rt timbetassssssss assaltante é baleado por cl...  [rt, timbetassssssss, assaltante, é, baleado, ...  [rt, timbetassssssss, assaltante, baleado, cli...
8014  Polícia em MG apresenta rapaz que recebia drog...  Positivo  polícia em mg apresenta rapaz que recebia drog...  [polícia, em, mg, apresenta, rapaz, que, receb...  [polícia, mg, apresenta, rapaz, recebia, droga...
4038  RT @Rede45: Em meio à calamidade financeira, P...  Negativo  rt rede45 em meio à calamidade financeira pime...  [rt, rede45, em, meio, à, calamidade, financei...  [rt, rede45, meio, calamidade, financeira, pim...
4260  RT @sytambalejy: I'm at Salão do Samuca in Gov...    Neutro  rt sytambalejy m at salão do samuca in governa...  [rt, sytambalejy, m, at, salão, do, samuca, in...  [rt, sytambalejy, m, at, salão, samuca, in, go...
39    #beta #betalab #mg Ex-ministro e outros: Servi...    Neutro   beta betalab mg ex ministro outros servidores...  [beta, betalab, mg, ex, ministro, outros, serv...  [beta, betalab, mg, ex, ministro, outros, serv...
7920  Perigoso traficante é preso em Ipaba, MG https...  Positivo  perigoso traficante é preso em ipaba mg https ...  [perigoso, traficante, é, preso, em, ipaba, mg...  [perigoso, traficante, preso, ipaba, mg, https...
4589  RT @VEJA: Em calamidade financeira, governo de...  Negativo  rt veja em calamidade financeira governo de mg...  [rt, veja, em, calamidade, financeira, governo...  [rt, veja, calamidade, financeira, governo, mg...
2213  RT @Adri7isidro: Vendo iPhone 6 en perfecto es...    Neutro  rt adri7isidro vendo iphone 6 en perfecto esta...  [rt, adri7isidro, vendo, iphone, 6, en, perfec...  [rt, adri7isidro, vendo, iphone, 6, en, perfec...
7220  Presos por roubo à casa em Juiz de Fora têm hi...  Positivo  presos por roubo à casa em juiz de fora têm hi...  [presos, por, roubo, à, casa, em, juiz, de, fo...  [presos, roubo, casa, juiz, têm, histórico, cr...
783   Defesa Civil de MG confirma 16ª morte pela chu...    Neutro  defesa civil de mg confirma 16ª morte pela chu...  [defesa, civil, de, mg, confirma, 16ª, morte, ...  [defesa, civil, mg, confirma, 16ª, morte, chuv...
2079  Presidente do STJ mantém preso ex-subsecretári...    Neutro  presidente do stj mantém preso ex subsecretári...  [presidente, do, stj, mantém, preso, ex, subse...  [presidente, stj, mantém, preso, ex, subsecret...
8098  Três homens são presos por suspeita de roubo d...  Positivo  três homens são presos por suspeita de roubo d...  [três, homens, são, presos, por, suspeita, de,...  [três, homens, presos, suspeita, roubo, cargas...
3227  RT @exame: Em calamidade financeira, governo d...  Negativo  rt exame em calamidade financeira governo de m...  [rt, exame, em, calamidade, financeira, govern...  [rt, exame, calamidade, financeira, governo, m...
161   @diogo_cc estou hahahaha mas trabalho mais pro...    Neutro   diogo_cc estou hahahaha mas trabalho mais pro...  [diogo_cc, estou, hahahaha, mas, trabalho, mai...  [diogo_cc, hahahaha, trabalho, pro, impresso, ...
7982  Polícia Civil flagra entrega de drogas e celul...  Positivo  polícia civil flagra entrega de drogas celular...  [polícia, civil, flagra, entrega, de, drogas, ...  [polícia, civil, flagra, entrega, drogas, celu...
5834  Araxá recebe novas doses da vacina contra febr...  Positivo  araxá recebe novas doses da vacina contra febr...  [araxá, recebe, novas, doses, da, vacina, cont...  [araxá, recebe, novas, doses, vacina, contra, ...
6086  @PMMG190 - ITABIRA - PM prende autores de roub...  Positivo   pmmg190 itabira pm prende autores de roubo na...  [pmmg190, itabira, pm, prende, autores, de, ro...  [pmmg190, itabira, pm, prende, autores, roubo,...
5390  Governo anuncia ensino integral em três escola...  Positivo  governo anuncia ensino integral em três escola...  [governo, anuncia, ensino, integral, em, três,...  [governo, anuncia, ensino, integral, três, esc...
5517  A Secretaria de Estado de Saúde apresentou na ...  Positivo  a secretaria de estado de saúde apresentou na ...  [a, secretaria, de, estado, de, saúde, apresen...  [secretaria, estado, saúde, apresentou, manhã,...
444   Atirador mata cinco e fere oito em aeroporto d...    Neutro  atirador mata cinco fere oito em aeroporto de ...  [atirador, mata, cinco, fere, oito, em, aeropo...  [atirador, mata, cinco, fere, oito, aeroporto,...
6777  #timbeta #globo Dois homens são preso após rou...  Positivo   timbeta globo dois homens são preso após roub...  [timbeta, globo, dois, homens, são, preso, apó...  [timbeta, globo, dois, homens, preso, após, ro...
751   Custaram R$ 21,8 milhões: Mesmo em calamidade,...  Negativo  custaram 21 8 milhões mesmo em calamidade gove...  [custaram, 21, 8, milhões, mesmo, em, calamida...  [custaram, 21, 8, milhões, calamidade, governo...
3247  RT @exame: Em calamidade financeira, governo d...  Negativo  rt exame em calamidade financeira governo de m...  [rt, exame, em, calamidade, financeira, govern...  [rt, exame, calamidade, financeira, governo, m...
4769  Superávit comercial da Alemanha sobe a 21,7 bi...    Neutro  superávit comercial da alemanha sobe 21 7 bilh...  [superávit, comercial, da, alemanha, sobe, 21,...  [superávit, comercial, alemanha, sobe, 21, 7, ...
5205  RT @NilmaAguiar: Dos grandes centros.O estado ...  Positivo  rt nilmaaguiar dos grandes centros estado em m...  [rt, nilmaaguiar, dos, grandes, centros, estad...  [rt, nilmaaguiar, grandes, centros, estado, me...
4017  RT @radioitatiaia: Mesmo em 'calamidade financ...  Negativo  rt radioitatiaia mesmo em calamidade financeir...  [rt, radioitatiaia, mesmo, em, calamidade, fin...  [rt, radioitatiaia, calamidade, financeira, go...
5182  RT @caminhodaescola: @CNHIndustrial entrega 62...  Positivo  rt caminhodaescola cnhindustrial entrega 628 ô...  [rt, caminhodaescola, cnhindustrial, entrega, ...  [rt, caminhodaescola, cnhindustrial, entrega, ...
644   Cinco presos fogem de cadeia em Minas armados ...    Neutro  cinco presos fogem de cadeia em minas armados ...  [cinco, presos, fogem, de, cadeia, em, minas, ...  [cinco, presos, fogem, cadeia, minas, armados,...
4530  RT @VEJA: Em calamidade financeira, governo de...  Negativo  rt veja em calamidade financeira governo de mg...  [rt, veja, em, calamidade, financeira, governo...  [rt, veja, calamidade, financeira, governo, mg...
5992  Vacinação contra febre amarela é intensificada...  Positivo  vacinação contra febre amarela é intensificada...  [vacinação, contra, febre, amarela, é, intensi...  [vacinação, contra, febre, amarela, intensific...
2746  RT @CAASCORPION: Depois de decretar “calamidad...  Negativo  rt caascorpion depois de decretar calamidade f...  [rt, caascorpion, depois, de, decretar, calami...  [rt, caascorpion, decretar, calamidade, financ...
2008  Postos dos Sine oferecem mais de 1.500 vagas d...    Neutro  postos dos sine oferecem mais de 1 500 vagas d...  [postos, dos, sine, oferecem, mais, de, 1, 500...  [postos, sine, oferecem, 1, 500, vagas, empreg...
1139  Governador de Minas usa helicóptero do Estado ...  Negativo  governador de minas usa helicóptero do estado ...  [governador, de, minas, usa, helicóptero, do, ...  [governador, minas, usa, helicóptero, estado, ...
1379  I'm at Doutor Lund in Doutor Lund, Estado de M...    Neutro  i at doutor lund in doutor lund estado de mina...  [i, at, doutor, lund, in, doutor, lund, estado...  [i, at, doutor, lund, in, doutor, lund, estado...
3903  RT @OrganizadAntiPT: Mesmo em calamidade finan...  Negativo  rt organizadantipt mesmo em calamidade finance...  [rt, organizadantipt, mesmo, em, calamidade, f...  [rt, organizadantipt, calamidade, financeira, ...
3531  RT @JBarbosa2014: A FÓRMULA DO FRACASSO:\nO go...  Negativo  rt jbarbosa2014 fórmula do fracasso governo pe...  [rt, jbarbosa2014, fórmula, do, fracasso, gove...  [rt, jbarbosa2014, fórmula, fracasso, governo,...
5296  O Governo de #Minas vai liberar R$ 770.452,56 ...  Positivo  o governo de minas vai liberar 770 452 56 para...  [o, governo, de, minas, vai, liberar, 770, 452...  [governo, minas, vai, liberar, 770, 452, 56, o...
6763  Três são presos após furto a loja em shopping ...  Positivo  três são presos após furto loja em shopping de...  [três, são, presos, após, furto, loja, em, sho...  [três, presos, após, furto, loja, shopping, va...
2354  RT @AnaPaulaVolei: Mais 2 helicópteros!!A cara...  Negativo  rt anapaulavolei mais 2 helicópteros cara de p...  [rt, anapaulavolei, mais, 2, helicópteros, car...  [rt, anapaulavolei, 2, helicópteros, cara, pau...
6566  RT @fera2k: Presídio privado em Minas Gerais n...  Positivo  rt fera2k presídio privado em minas gerais nun...  [rt, fera2k, presídio, privado, em, minas, ger...  [rt, fera2k, presídio, privado, minas, gerais,...
[2021-07-19 02:06:21+0000] INFO - prefect.TaskRunner | Task 'task_print': Finished task run for task with final state: 'Success'
[2021-07-19 02:06:21+0000] INFO - prefect.TaskRunner | Task 'splitting': Starting task run...
[2021-07-19 02:06:21+0000] INFO - prefect.TaskRunner | Task 'splitting': Finished task run for task with final state: 'Success'
[2021-07-19 02:06:21+0000] INFO - prefect.TaskRunner | Task 'splitting[0]': Starting task run...
[2021-07-19 02:06:21+0000] INFO - prefect.TaskRunner | Task 'splitting[0]': Finished task run for task with final state: 'Success'
[2021-07-19 02:06:21+0000] INFO - prefect.TaskRunner | Task 'splitting[1]': Starting task run...
[2021-07-19 02:06:21+0000] INFO - prefect.TaskRunner | Task 'splitting[1]': Finished task run for task with final state: 'Success'
[2021-07-19 02:06:22+0000] INFO - prefect.TaskRunner | Task 'splitting[2]': Starting task run...
[2021-07-19 02:06:22+0000] INFO - prefect.TaskRunner | Task 'splitting[2]': Finished task run for task with final state: 'Success'
[2021-07-19 02:06:22+0000] INFO - prefect.TaskRunner | Task 'model': Starting task run...
Fitting 5 folds for each of 10 candidates, totalling 50 fits
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=28.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=28.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=28.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=28.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=28.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=4.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=4.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=4.0; total time=   0.2s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=4.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=4.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=23.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=23.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=23.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=23.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=23.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=19.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=19.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=19.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=19.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=19.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=24.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=24.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=24.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=24.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=24.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=18.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=18.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=18.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=18.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=18.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=22.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=22.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=22.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=22.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=22.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=29.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=29.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=29.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=29.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=29.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=20.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=20.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=20.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=20.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=20.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=15.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=15.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=15.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=15.0; total time=   0.1s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=15.0; total time=   0.1s
[2021-07-19 02:06:28+0000] INFO - prefect.TaskRunner | Task 'model': Finished task run for task with final state: 'Success'
[2021-07-19 02:06:28+0000] INFO - prefect.TaskRunner | Task 'model[3]': Starting task run...
[2021-07-19 02:06:28+0000] INFO - prefect.TaskRunner | Task 'model[3]': Finished task run for task with final state: 'Success'
[2021-07-19 02:06:28+0000] INFO - prefect.TaskRunner | Task 'model[2]': Starting task run...
[2021-07-19 02:06:29+0000] INFO - prefect.TaskRunner | Task 'model[2]': Finished task run for task with final state: 'Success'
[2021-07-19 02:06:29+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Starting task run...
[2021-07-19 02:06:29+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Finished task run for task with final state: 'Success'
[2021-07-19 02:06:29+0000] INFO - prefect.TaskRunner | Task 'model[2]['actual']': Starting task run...
[2021-07-19 02:06:29+0000] INFO - prefect.TaskRunner | Task 'model[2]['actual']': Finished task run for task with final state: 'Success'
[2021-07-19 02:06:29+0000] INFO - prefect.TaskRunner | Task 'model[2]['pred']': Starting task run...
[2021-07-19 02:06:29+0000] INFO - prefect.TaskRunner | Task 'model[2]['pred']': Finished task run for task with final state: 'Success'
[2021-07-19 02:06:29+0000] INFO - prefect.TaskRunner | Task 'model[1]': Starting task run...
[2021-07-19 02:06:29+0000] INFO - prefect.TaskRunner | Task 'model[1]': Finished task run for task with final state: 'Success'
[2021-07-19 02:06:29+0000] INFO - prefect.TaskRunner | Task 'performance': Starting task run...
[2021-07-19 02:06:29+0000] INFO - prefect.TaskRunner | Task 'performance': Finished task run for task with final state: 'Success'
[2021-07-19 02:06:29+0000] INFO - prefect.TaskRunner | Task 'model[0]': Starting task run...
[2021-07-19 02:06:29+0000] INFO - prefect.TaskRunner | Task 'model[0]': Finished task run for task with final state: 'Success'
[2021-07-19 02:06:29+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Starting task run...
[2021-07-19 02:06:29+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Finished task run for task with final state: 'Success'
[2021-07-19 02:06:29+0000] INFO - prefect.TaskRunner | Task 'model[1]['pred']': Starting task run...
[2021-07-19 02:06:29+0000] INFO - prefect.TaskRunner | Task 'model[1]['pred']': Finished task run for task with final state: 'Success'
[2021-07-19 02:06:29+0000] INFO - prefect.TaskRunner | Task 'model[0]['actual']': Starting task run...
[2021-07-19 02:06:29+0000] INFO - prefect.TaskRunner | Task 'model[0]['actual']': Finished task run for task with final state: 'Success'
[2021-07-19 02:06:29+0000] INFO - prefect.TaskRunner | Task 'model[0]['pred']': Starting task run...
[2021-07-19 02:06:29+0000] INFO - prefect.TaskRunner | Task 'model[0]['pred']': Finished task run for task with final state: 'Success'
[2021-07-19 02:06:29+0000] INFO - prefect.TaskRunner | Task 'model[1]['actual']': Starting task run...
[2021-07-19 02:06:29+0000] INFO - prefect.TaskRunner | Task 'model[1]['actual']': Finished task run for task with final state: 'Success'
[2021-07-19 02:06:29+0000] INFO - prefect.TaskRunner | Task 'performance': Starting task run...
[2021-07-19 02:06:29+0000] INFO - prefect.TaskRunner | Task 'performance': Finished task run for task with final state: 'Success'
[2021-07-19 02:06:29+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Starting task run...
[2021-07-19 02:06:29+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Finished task run for task with final state: 'Success'
[2021-07-19 02:06:29+0000] INFO - prefect.TaskRunner | Task 'performance': Starting task run...
/usr/local/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1245: UndefinedMetricWarning: Recall and F-score are ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/usr/local/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1245: UndefinedMetricWarning: Recall and F-score are ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/usr/local/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1245: UndefinedMetricWarning: Recall and F-score are ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
[2021-07-19 02:06:29+0000] INFO - prefect.TaskRunner | Task 'performance': Finished task run for task with final state: 'Success'
[2021-07-19 02:06:29+0000] INFO - prefect.FlowRunner | Flow run SUCCESS: all reference tasks succeeded
Sun Jul 18 11:07:03 PM -03 2021
Creating py-greenhouse_run_run ... 
Creating py-greenhouse_run_run ... done
[nltk_data] Downloading package stopwords to /root/nltk_data...
[nltk_data]   Unzipping corpora/stopwords.zip.
[nltk_data] Downloading package punkt to /root/nltk_data...
[nltk_data]   Unzipping tokenizers/punkt.zip.
[2021-07-19 02:07:08+0000] INFO - prefect.FlowRunner | Beginning Flow run for 'greenhouse'
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'sourcing': Starting task run...
[2021-07-19 02:07:08+0000] ERROR - prefect.TaskRunner | Unexpected error: FileNotFoundError(2, 'No such file or directory')
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/site-packages/prefect/engine/runner.py", line 48, in inner
    new_state = method(self, state, *args, **kwargs)
  File "/usr/local/lib/python3.9/site-packages/prefect/engine/task_runner.py", line 865, in get_task_run_state
    value = prefect.utilities.executors.run_task_with_timeout(
  File "/usr/local/lib/python3.9/site-packages/prefect/utilities/executors.py", line 299, in run_task_with_timeout
    return task.run(*args, **kwargs)  # type: ignore
  File "/usr/app/src/main.py", line 36, in sourcing
    return data_sourcing.get(path=path, sep=sep, header=header, names=names)
  File "/usr/app/src/data_sourcing.py", line 7, in get
    df = pd.read_csv(filepath_or_buffer=path, sep=sep, header=header, names=names)
  File "/usr/local/lib/python3.9/site-packages/pandas/io/parsers.py", line 610, in read_csv
    return _read(filepath_or_buffer, kwds)
  File "/usr/local/lib/python3.9/site-packages/pandas/io/parsers.py", line 462, in _read
    parser = TextFileReader(filepath_or_buffer, **kwds)
  File "/usr/local/lib/python3.9/site-packages/pandas/io/parsers.py", line 819, in __init__
    self._engine = self._make_engine(self.engine)
  File "/usr/local/lib/python3.9/site-packages/pandas/io/parsers.py", line 1050, in _make_engine
    return mapping[engine](self.f, **self.options)  # type: ignore[call-arg]
  File "/usr/local/lib/python3.9/site-packages/pandas/io/parsers.py", line 1867, in __init__
    self._open_handles(src, kwds)
  File "/usr/local/lib/python3.9/site-packages/pandas/io/parsers.py", line 1362, in _open_handles
    self.handles = get_handle(
  File "/usr/local/lib/python3.9/site-packages/pandas/io/common.py", line 642, in get_handle
    handle = open(
FileNotFoundError: [Errno 2] No such file or directory: '/usr/app/examples/df_example.csv'
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'sourcing': Finished task run for task with final state: 'Failed'
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'cleansing': Starting task run...
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'cleansing': Finished task run for task with final state: 'TriggerFailed'
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'tokenizing': Starting task run...
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'tokenizing': Finished task run for task with final state: 'TriggerFailed'
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'stop_words': Starting task run...
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'stop_words': Finished task run for task with final state: 'TriggerFailed'
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'task_print': Starting task run...
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'task_print': Finished task run for task with final state: 'TriggerFailed'
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'splitting': Starting task run...
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'splitting': Finished task run for task with final state: 'TriggerFailed'
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'splitting[0]': Starting task run...
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'splitting[0]': Finished task run for task with final state: 'TriggerFailed'
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'splitting[1]': Starting task run...
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'splitting[1]': Finished task run for task with final state: 'TriggerFailed'
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'splitting[2]': Starting task run...
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'splitting[2]': Finished task run for task with final state: 'TriggerFailed'
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'model': Starting task run...
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'model': Finished task run for task with final state: 'TriggerFailed'
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'model[3]': Starting task run...
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'model[3]': Finished task run for task with final state: 'TriggerFailed'
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'model[2]': Starting task run...
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'model[2]': Finished task run for task with final state: 'TriggerFailed'
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Starting task run...
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Finished task run for task with final state: 'TriggerFailed'
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'model[2]['actual']': Starting task run...
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'model[2]['actual']': Finished task run for task with final state: 'TriggerFailed'
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'model[2]['pred']': Starting task run...
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'model[2]['pred']': Finished task run for task with final state: 'TriggerFailed'
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'model[1]': Starting task run...
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'model[1]': Finished task run for task with final state: 'TriggerFailed'
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'performance': Starting task run...
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'performance': Finished task run for task with final state: 'TriggerFailed'
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'model[0]': Starting task run...
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'model[0]': Finished task run for task with final state: 'TriggerFailed'
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'model[1]['pred']': Starting task run...
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'model[1]['pred']': Finished task run for task with final state: 'TriggerFailed'
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Starting task run...
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Finished task run for task with final state: 'TriggerFailed'
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'model[0]['actual']': Starting task run...
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'model[0]['actual']': Finished task run for task with final state: 'TriggerFailed'
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'model[0]['pred']': Starting task run...
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'model[0]['pred']': Finished task run for task with final state: 'TriggerFailed'
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'model[1]['actual']': Starting task run...
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'model[1]['actual']': Finished task run for task with final state: 'TriggerFailed'
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Starting task run...
[2021-07-19 02:07:08+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Finished task run for task with final state: 'TriggerFailed'
[2021-07-19 02:07:09+0000] INFO - prefect.TaskRunner | Task 'performance': Starting task run...
[2021-07-19 02:07:09+0000] INFO - prefect.TaskRunner | Task 'performance': Finished task run for task with final state: 'TriggerFailed'
[2021-07-19 02:07:09+0000] INFO - prefect.TaskRunner | Task 'performance': Starting task run...
[2021-07-19 02:07:09+0000] INFO - prefect.TaskRunner | Task 'performance': Finished task run for task with final state: 'TriggerFailed'
[2021-07-19 02:07:09+0000] INFO - prefect.FlowRunner | Flow run FAILED: some reference tasks failed.
Sun Jul 18 11:07:47 PM -03 2021
Creating py-greenhouse_run_run ... 
Creating py-greenhouse_run_run ... done
[nltk_data] Downloading package stopwords to /root/nltk_data...
[nltk_data]   Unzipping corpora/stopwords.zip.
[nltk_data] Downloading package punkt to /root/nltk_data...
[nltk_data]   Unzipping tokenizers/punkt.zip.
[2021-07-19 02:07:51+0000] INFO - prefect.FlowRunner | Beginning Flow run for 'greenhouse'
[2021-07-19 02:07:51+0000] INFO - prefect.TaskRunner | Task 'sourcing': Starting task run...
[2021-07-19 02:07:51+0000] INFO - prefect.TaskRunner | Task 'sourcing': Finished task run for task with final state: 'Success'
[2021-07-19 02:07:51+0000] INFO - prefect.TaskRunner | Task 'cleansing': Starting task run...
[2021-07-19 02:07:52+0000] INFO - prefect.TaskRunner | Task 'cleansing': Finished task run for task with final state: 'Success'
[2021-07-19 02:07:52+0000] INFO - prefect.TaskRunner | Task 'tokenizing': Starting task run...
[2021-07-19 02:07:52+0000] INFO - prefect.TaskRunner | Task 'tokenizing': Finished task run for task with final state: 'Success'
[2021-07-19 02:07:52+0000] INFO - prefect.TaskRunner | Task 'stop_words': Starting task run...
[2021-07-19 02:07:52+0000] INFO - prefect.TaskRunner | Task 'stop_words': Finished task run for task with final state: 'Success'
[2021-07-19 02:07:52+0000] INFO - prefect.TaskRunner | Task 'task_print': Starting task run...
[2021-07-19 02:07:52+0000] INFO - prefect.TaskRunner |                                                    text      cats                                         clean_text                                             tokens                                        tokens_wosw
0     � @ Governador Valadares, Minas Gerais https:/...    Neutro   governador valadares minas gerais https co b3...  [governador, valadares, minas, gerais, https, ...  [governador, valadares, minas, gerais, https, ...
1     �� @ Governador Valadares, Minas Gerais https:...    Neutro   governador valadares minas gerais https co dp...  [governador, valadares, minas, gerais, https, ...  [governador, valadares, minas, gerais, https, ...
2                           ��� https://t.co/BnDsO34qK0    Neutro                                https co bndso34qk0                            [https, co, bndso34qk0]                            [https, co, bndso34qk0]
3     ��� PSOL vai questionar aumento de vereadores ...  Negativo   psol vai questionar aumento de vereadores pre...  [psol, vai, questionar, aumento, de, vereadore...  [psol, vai, questionar, aumento, vereadores, p...
4     " bom é bandido morto"\nDeputado Cabo Júlio é ...    Neutro   bom é bandido morto deputado cabo júlio é con...  [bom, é, bandido, morto, deputado, cabo, júlio...  [bom, bandido, morto, deputado, cabo, júlio, c...
...                                                 ...       ...                                                ...                                                ...                                                ...
8124  Trio é preso suspeito de roubo, tráfico e abus...  Positivo  trio é preso suspeito de roubo tráfico abuso s...  [trio, é, preso, suspeito, de, roubo, tráfico,...  [trio, preso, suspeito, roubo, tráfico, abuso,...
8125  Trio é preso suspeito de roubo, tráfico e abus...  Positivo  trio é preso suspeito de roubo tráfico abuso s...  [trio, é, preso, suspeito, de, roubo, tráfico,...  [trio, preso, suspeito, roubo, tráfico, abuso,...
8126  Trio é preso suspeito de roubo, tráfico e abus...  Positivo  trio é preso suspeito de roubo tráfico abuso s...  [trio, é, preso, suspeito, de, roubo, tráfico,...  [trio, preso, suspeito, roubo, tráfico, abuso,...
8127  Trio é preso suspeito de roubo, tráfico e abus...  Positivo  trio é preso suspeito de roubo tráfico abuso s...  [trio, é, preso, suspeito, de, roubo, tráfico,...  [trio, preso, suspeito, roubo, tráfico, abuso,...
8128  Trio suspeito de roubo de cargas é preso em Sa...  Positivo  trio suspeito de roubo de cargas é preso em sa...  [trio, suspeito, de, roubo, de, cargas, é, pre...  [trio, suspeito, roubo, cargas, preso, santa, ...

[8129 rows x 5 columns]
[2021-07-19 02:07:52+0000] INFO - prefect.TaskRunner | Task 'task_print': Finished task run for task with final state: 'Success'
[2021-07-19 02:07:52+0000] INFO - prefect.TaskRunner | Task 'splitting': Starting task run...
[2021-07-19 02:07:52+0000] INFO - prefect.TaskRunner | Task 'splitting': Finished task run for task with final state: 'Success'
[2021-07-19 02:07:52+0000] INFO - prefect.TaskRunner | Task 'splitting[0]': Starting task run...
[2021-07-19 02:07:52+0000] INFO - prefect.TaskRunner | Task 'splitting[0]': Finished task run for task with final state: 'Success'
[2021-07-19 02:07:52+0000] INFO - prefect.TaskRunner | Task 'splitting[1]': Starting task run...
[2021-07-19 02:07:52+0000] INFO - prefect.TaskRunner | Task 'splitting[1]': Finished task run for task with final state: 'Success'
[2021-07-19 02:07:52+0000] INFO - prefect.TaskRunner | Task 'splitting[2]': Starting task run...
[2021-07-19 02:07:52+0000] INFO - prefect.TaskRunner | Task 'splitting[2]': Finished task run for task with final state: 'Success'
[2021-07-19 02:07:52+0000] INFO - prefect.TaskRunner | Task 'model': Starting task run...
Fitting 5 folds for each of 10 candidates, totalling 50 fits
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=28.0; total time=   0.8s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=28.0; total time=   0.7s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=28.0; total time=   0.7s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=28.0; total time=   0.8s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=28.0; total time=   0.8s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=4.0; total time=   0.3s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=4.0; total time=   0.3s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=4.0; total time=   0.3s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=4.0; total time=   0.3s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=4.0; total time=   0.3s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=23.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=23.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=23.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=23.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=23.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=19.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=19.0; total time=   0.5s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=19.0; total time=   0.5s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=19.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=19.0; total time=   0.5s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=24.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=24.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=24.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=24.0; total time=   0.7s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=24.0; total time=   0.7s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=18.0; total time=   0.5s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=18.0; total time=   0.5s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=18.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=18.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=18.0; total time=   0.5s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=22.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=22.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=22.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=22.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=22.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=29.0; total time=   0.8s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=29.0; total time=   0.7s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=29.0; total time=   0.8s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=29.0; total time=   0.8s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=29.0; total time=   0.8s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=20.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=20.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=20.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=20.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=20.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=15.0; total time=   0.5s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=15.0; total time=   0.5s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=15.0; total time=   0.5s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=15.0; total time=   0.5s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=15.0; total time=   0.5s
[2021-07-19 02:08:25+0000] INFO - prefect.TaskRunner | Task 'model': Finished task run for task with final state: 'Success'
[2021-07-19 02:08:25+0000] INFO - prefect.TaskRunner | Task 'model[2]': Starting task run...
[2021-07-19 02:08:25+0000] INFO - prefect.TaskRunner | Task 'model[2]': Finished task run for task with final state: 'Success'
[2021-07-19 02:08:25+0000] INFO - prefect.TaskRunner | Task 'model[0]': Starting task run...
[2021-07-19 02:08:25+0000] INFO - prefect.TaskRunner | Task 'model[0]': Finished task run for task with final state: 'Success'
[2021-07-19 02:08:25+0000] INFO - prefect.TaskRunner | Task 'model[3]': Starting task run...
[2021-07-19 02:08:25+0000] INFO - prefect.TaskRunner | Task 'model[3]': Finished task run for task with final state: 'Success'
[2021-07-19 02:08:25+0000] INFO - prefect.TaskRunner | Task 'model[0]['actual']': Starting task run...
[2021-07-19 02:08:25+0000] INFO - prefect.TaskRunner | Task 'model[0]['actual']': Finished task run for task with final state: 'Success'
[2021-07-19 02:08:25+0000] INFO - prefect.TaskRunner | Task 'model[1]': Starting task run...
[2021-07-19 02:08:25+0000] INFO - prefect.TaskRunner | Task 'model[1]': Finished task run for task with final state: 'Success'
[2021-07-19 02:08:25+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Starting task run...
[2021-07-19 02:08:25+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Finished task run for task with final state: 'Success'
[2021-07-19 02:08:25+0000] INFO - prefect.TaskRunner | Task 'model[1]['actual']': Starting task run...
[2021-07-19 02:08:25+0000] INFO - prefect.TaskRunner | Task 'model[1]['actual']': Finished task run for task with final state: 'Success'
[2021-07-19 02:08:25+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Starting task run...
[2021-07-19 02:08:25+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Finished task run for task with final state: 'Success'
[2021-07-19 02:08:25+0000] INFO - prefect.TaskRunner | Task 'model[0]['pred']': Starting task run...
[2021-07-19 02:08:25+0000] INFO - prefect.TaskRunner | Task 'model[0]['pred']': Finished task run for task with final state: 'Success'
[2021-07-19 02:08:25+0000] INFO - prefect.TaskRunner | Task 'model[2]['actual']': Starting task run...
[2021-07-19 02:08:25+0000] INFO - prefect.TaskRunner | Task 'model[2]['actual']': Finished task run for task with final state: 'Success'
[2021-07-19 02:08:25+0000] INFO - prefect.TaskRunner | Task 'model[2]['pred']': Starting task run...
[2021-07-19 02:08:25+0000] INFO - prefect.TaskRunner | Task 'model[2]['pred']': Finished task run for task with final state: 'Success'
[2021-07-19 02:08:25+0000] INFO - prefect.TaskRunner | Task 'performance': Starting task run...
/usr/local/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1245: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/usr/local/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1245: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/usr/local/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1245: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
[2021-07-19 02:08:25+0000] INFO - prefect.TaskRunner | Task 'performance': Finished task run for task with final state: 'Success'
[2021-07-19 02:08:25+0000] INFO - prefect.TaskRunner | Task 'model[1]['pred']': Starting task run...
[2021-07-19 02:08:25+0000] INFO - prefect.TaskRunner | Task 'model[1]['pred']': Finished task run for task with final state: 'Success'
[2021-07-19 02:08:25+0000] INFO - prefect.TaskRunner | Task 'performance': Starting task run...
[2021-07-19 02:08:26+0000] INFO - prefect.TaskRunner | Task 'performance': Finished task run for task with final state: 'Success'
[2021-07-19 02:08:26+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Starting task run...
[2021-07-19 02:08:26+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Finished task run for task with final state: 'Success'
[2021-07-19 02:08:26+0000] INFO - prefect.TaskRunner | Task 'performance': Starting task run...
/usr/local/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1245: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/usr/local/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1245: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/usr/local/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1245: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
[2021-07-19 02:08:26+0000] INFO - prefect.TaskRunner | Task 'performance': Finished task run for task with final state: 'Success'
[2021-07-19 02:08:26+0000] INFO - prefect.FlowRunner | Flow run SUCCESS: all reference tasks succeeded
Sun Jul 18 11:12:04 PM -03 2021
Creating py-greenhouse_run_run ... 
Creating py-greenhouse_run_run ... done
[nltk_data] Downloading package stopwords to /root/nltk_data...
[nltk_data]   Unzipping corpora/stopwords.zip.
[nltk_data] Downloading package punkt to /root/nltk_data...
[nltk_data]   Unzipping tokenizers/punkt.zip.
[2021-07-19 02:12:09+0000] INFO - prefect.FlowRunner | Beginning Flow run for 'greenhouse'
[2021-07-19 02:12:09+0000] INFO - prefect.TaskRunner | Task 'sourcing': Starting task run...
[2021-07-19 02:12:09+0000] INFO - prefect.TaskRunner | Task 'sourcing': Finished task run for task with final state: 'Success'
[2021-07-19 02:12:09+0000] INFO - prefect.TaskRunner | Task 'cleansing': Starting task run...
[2021-07-19 02:12:10+0000] INFO - prefect.TaskRunner | Task 'cleansing': Finished task run for task with final state: 'Success'
[2021-07-19 02:12:10+0000] INFO - prefect.TaskRunner | Task 'tokenizing': Starting task run...
[2021-07-19 02:12:10+0000] INFO - prefect.TaskRunner | Task 'tokenizing': Finished task run for task with final state: 'Success'
[2021-07-19 02:12:10+0000] INFO - prefect.TaskRunner | Task 'stop_words': Starting task run...
[2021-07-19 02:12:10+0000] INFO - prefect.TaskRunner | Task 'stop_words': Finished task run for task with final state: 'Success'
[2021-07-19 02:12:10+0000] INFO - prefect.TaskRunner | Task 'task_print': Starting task run...
[2021-07-19 02:12:10+0000] INFO - prefect.TaskRunner |                                                    text      cats                                         clean_text                                             tokens                                        tokens_wosw
0     � @ Governador Valadares, Minas Gerais https:/...    Neutro   governador valadares minas gerais https co b3...  [governador, valadares, minas, gerais, https, ...  [governador, valadares, minas, gerais, https, ...
1     �� @ Governador Valadares, Minas Gerais https:...    Neutro   governador valadares minas gerais https co dp...  [governador, valadares, minas, gerais, https, ...  [governador, valadares, minas, gerais, https, ...
2                           ��� https://t.co/BnDsO34qK0    Neutro                                https co bndso34qk0                            [https, co, bndso34qk0]                            [https, co, bndso34qk0]
3     ��� PSOL vai questionar aumento de vereadores ...  Negativo   psol vai questionar aumento de vereadores pre...  [psol, vai, questionar, aumento, de, vereadore...  [psol, vai, questionar, aumento, vereadores, p...
4     " bom é bandido morto"\nDeputado Cabo Júlio é ...    Neutro   bom é bandido morto deputado cabo júlio é con...  [bom, é, bandido, morto, deputado, cabo, júlio...  [bom, bandido, morto, deputado, cabo, júlio, c...
...                                                 ...       ...                                                ...                                                ...                                                ...
8122  Trio é preso suspeito de roubo, tráfico e abus...  Positivo  trio é preso suspeito de roubo tráfico abuso s...  [trio, é, preso, suspeito, de, roubo, tráfico,...  [trio, preso, suspeito, roubo, tráfico, abuso,...
8123  Trio é preso suspeito de roubo, tráfico e abus...  Positivo  trio é preso suspeito de roubo tráfico abuso s...  [trio, é, preso, suspeito, de, roubo, tráfico,...  [trio, preso, suspeito, roubo, tráfico, abuso,...
8124  Trio é preso suspeito de roubo, tráfico e abus...  Positivo  trio é preso suspeito de roubo tráfico abuso s...  [trio, é, preso, suspeito, de, roubo, tráfico,...  [trio, preso, suspeito, roubo, tráfico, abuso,...
8125  Trio é preso suspeito de roubo, tráfico e abus...  Positivo  trio é preso suspeito de roubo tráfico abuso s...  [trio, é, preso, suspeito, de, roubo, tráfico,...  [trio, preso, suspeito, roubo, tráfico, abuso,...
8126  Trio suspeito de roubo de cargas é preso em Sa...  Positivo  trio suspeito de roubo de cargas é preso em sa...  [trio, suspeito, de, roubo, de, cargas, é, pre...  [trio, suspeito, roubo, cargas, preso, santa, ...

[8127 rows x 5 columns]
[2021-07-19 02:12:10+0000] INFO - prefect.TaskRunner | Task 'task_print': Finished task run for task with final state: 'Success'
[2021-07-19 02:12:10+0000] INFO - prefect.TaskRunner | Task 'splitting': Starting task run...
[2021-07-19 02:12:10+0000] INFO - prefect.TaskRunner | Task 'splitting': Finished task run for task with final state: 'Success'
[2021-07-19 02:12:10+0000] INFO - prefect.TaskRunner | Task 'splitting[0]': Starting task run...
[2021-07-19 02:12:10+0000] INFO - prefect.TaskRunner | Task 'splitting[0]': Finished task run for task with final state: 'Success'
[2021-07-19 02:12:10+0000] INFO - prefect.TaskRunner | Task 'splitting[1]': Starting task run...
[2021-07-19 02:12:10+0000] INFO - prefect.TaskRunner | Task 'splitting[1]': Finished task run for task with final state: 'Success'
[2021-07-19 02:12:10+0000] INFO - prefect.TaskRunner | Task 'splitting[2]': Starting task run...
[2021-07-19 02:12:10+0000] INFO - prefect.TaskRunner | Task 'splitting[2]': Finished task run for task with final state: 'Success'
[2021-07-19 02:12:10+0000] INFO - prefect.TaskRunner | Task 'model': Starting task run...
Fitting 5 folds for each of 10 candidates, totalling 50 fits
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=28.0; total time=   0.7s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=28.0; total time=   0.7s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=28.0; total time=   0.8s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=28.0; total time=   0.7s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=28.0; total time=   0.7s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=4.0; total time=   0.3s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=4.0; total time=   0.3s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=4.0; total time=   0.3s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=4.0; total time=   0.3s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=4.0; total time=   0.3s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=23.0; total time=   0.7s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=23.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=23.0; total time=   0.7s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=23.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=23.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=19.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=19.0; total time=   0.5s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=19.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=19.0; total time=   0.5s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=19.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=24.0; total time=   0.7s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=24.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=24.0; total time=   0.7s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=24.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=24.0; total time=   0.7s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=18.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=18.0; total time=   0.5s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=18.0; total time=   0.5s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=18.0; total time=   0.5s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=18.0; total time=   0.5s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=22.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=22.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=22.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=22.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=22.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=29.0; total time=   0.8s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=29.0; total time=   0.8s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=29.0; total time=   0.8s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=29.0; total time=   0.7s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=29.0; total time=   0.8s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=20.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=20.0; total time=   0.7s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=20.0; total time=   0.7s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=20.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=20.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=15.0; total time=   0.5s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=15.0; total time=   0.5s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=15.0; total time=   0.5s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=15.0; total time=   0.5s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=15.0; total time=   0.5s
[2021-07-19 02:12:43+0000] INFO - prefect.TaskRunner | Task 'model': Finished task run for task with final state: 'Success'
[2021-07-19 02:12:43+0000] INFO - prefect.TaskRunner | Task 'model[3]': Starting task run...
[2021-07-19 02:12:43+0000] INFO - prefect.TaskRunner | Task 'model[3]': Finished task run for task with final state: 'Success'
[2021-07-19 02:12:43+0000] INFO - prefect.TaskRunner | Task 'model[2]': Starting task run...
[2021-07-19 02:12:43+0000] INFO - prefect.TaskRunner | Task 'model[2]': Finished task run for task with final state: 'Success'
[2021-07-19 02:12:43+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Starting task run...
[2021-07-19 02:12:43+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Finished task run for task with final state: 'Success'
[2021-07-19 02:12:43+0000] INFO - prefect.TaskRunner | Task 'model[2]['actual']': Starting task run...
[2021-07-19 02:12:43+0000] INFO - prefect.TaskRunner | Task 'model[2]['actual']': Finished task run for task with final state: 'Success'
[2021-07-19 02:12:43+0000] INFO - prefect.TaskRunner | Task 'model[2]['pred']': Starting task run...
[2021-07-19 02:12:43+0000] INFO - prefect.TaskRunner | Task 'model[2]['pred']': Finished task run for task with final state: 'Success'
[2021-07-19 02:12:43+0000] INFO - prefect.TaskRunner | Task 'model[1]': Starting task run...
[2021-07-19 02:12:43+0000] INFO - prefect.TaskRunner | Task 'model[1]': Finished task run for task with final state: 'Success'
[2021-07-19 02:12:43+0000] INFO - prefect.TaskRunner | Task 'performance': Starting task run...
[2021-07-19 02:12:43+0000] INFO - prefect.TaskRunner | Task 'performance': Finished task run for task with final state: 'Success'
[2021-07-19 02:12:43+0000] INFO - prefect.TaskRunner | Task 'model[0]': Starting task run...
[2021-07-19 02:12:43+0000] INFO - prefect.TaskRunner | Task 'model[0]': Finished task run for task with final state: 'Success'
[2021-07-19 02:12:43+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Starting task run...
[2021-07-19 02:12:43+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Finished task run for task with final state: 'Success'
[2021-07-19 02:12:43+0000] INFO - prefect.TaskRunner | Task 'model[1]['pred']': Starting task run...
[2021-07-19 02:12:43+0000] INFO - prefect.TaskRunner | Task 'model[1]['pred']': Finished task run for task with final state: 'Success'
[2021-07-19 02:12:43+0000] INFO - prefect.TaskRunner | Task 'model[0]['actual']': Starting task run...
[2021-07-19 02:12:43+0000] INFO - prefect.TaskRunner | Task 'model[0]['actual']': Finished task run for task with final state: 'Success'
[2021-07-19 02:12:43+0000] INFO - prefect.TaskRunner | Task 'model[0]['pred']': Starting task run...
[2021-07-19 02:12:43+0000] INFO - prefect.TaskRunner | Task 'model[0]['pred']': Finished task run for task with final state: 'Success'
[2021-07-19 02:12:43+0000] INFO - prefect.TaskRunner | Task 'model[1]['actual']': Starting task run...
[2021-07-19 02:12:43+0000] INFO - prefect.TaskRunner | Task 'model[1]['actual']': Finished task run for task with final state: 'Success'
[2021-07-19 02:12:43+0000] INFO - prefect.TaskRunner | Task 'performance': Starting task run...
[2021-07-19 02:12:44+0000] INFO - prefect.TaskRunner | Task 'performance': Finished task run for task with final state: 'Success'
[2021-07-19 02:12:44+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Starting task run...
[2021-07-19 02:12:44+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Finished task run for task with final state: 'Success'
[2021-07-19 02:12:44+0000] INFO - prefect.TaskRunner | Task 'performance': Starting task run...
[2021-07-19 02:12:44+0000] INFO - prefect.TaskRunner | Task 'performance': Finished task run for task with final state: 'Success'
[2021-07-19 02:12:44+0000] INFO - prefect.FlowRunner | Flow run SUCCESS: all reference tasks succeeded
Sun Jul 18 11:13:20 PM -03 2021
Creating py-greenhouse_run_run ... 
Creating py-greenhouse_run_run ... done
[nltk_data] Downloading package stopwords to /root/nltk_data...
[nltk_data]   Unzipping corpora/stopwords.zip.
[nltk_data] Downloading package punkt to /root/nltk_data...
[nltk_data]   Unzipping tokenizers/punkt.zip.
[2021-07-19 02:13:24+0000] INFO - prefect.FlowRunner | Beginning Flow run for 'greenhouse'
[2021-07-19 02:13:24+0000] INFO - prefect.TaskRunner | Task 'sourcing': Starting task run...
[2021-07-19 02:13:24+0000] INFO - prefect.TaskRunner | Task 'sourcing': Finished task run for task with final state: 'Success'
[2021-07-19 02:13:24+0000] INFO - prefect.TaskRunner | Task 'cleansing': Starting task run...
[2021-07-19 02:13:24+0000] INFO - prefect.TaskRunner | Task 'cleansing': Finished task run for task with final state: 'Success'
[2021-07-19 02:13:24+0000] INFO - prefect.TaskRunner | Task 'tokenizing': Starting task run...
[2021-07-19 02:13:24+0000] INFO - prefect.TaskRunner | Task 'tokenizing': Finished task run for task with final state: 'Success'
[2021-07-19 02:13:24+0000] INFO - prefect.TaskRunner | Task 'stop_words': Starting task run...
[2021-07-19 02:13:25+0000] INFO - prefect.TaskRunner | Task 'stop_words': Finished task run for task with final state: 'Success'
[2021-07-19 02:13:25+0000] INFO - prefect.TaskRunner | Task 'task_print': Starting task run...
[2021-07-19 02:13:25+0000] INFO - prefect.TaskRunner |                                                    text      cats                                         clean_text                                             tokens                                        tokens_wosw
0     � @ Governador Valadares, Minas Gerais https:/...    Neutro   governador valadares minas gerais https co b3...  [governador, valadares, minas, gerais, https, ...  [governador, valadares, minas, gerais, https, ...
1     �� @ Governador Valadares, Minas Gerais https:...    Neutro   governador valadares minas gerais https co dp...  [governador, valadares, minas, gerais, https, ...  [governador, valadares, minas, gerais, https, ...
2                           ��� https://t.co/BnDsO34qK0    Neutro                                https co bndso34qk0                            [https, co, bndso34qk0]                            [https, co, bndso34qk0]
3     ��� PSOL vai questionar aumento de vereadores ...  Negativo   psol vai questionar aumento de vereadores pre...  [psol, vai, questionar, aumento, de, vereadore...  [psol, vai, questionar, aumento, vereadores, p...
4     " bom é bandido morto"\nDeputado Cabo Júlio é ...    Neutro   bom é bandido morto deputado cabo júlio é con...  [bom, é, bandido, morto, deputado, cabo, júlio...  [bom, bandido, morto, deputado, cabo, júlio, c...
...                                                 ...       ...                                                ...                                                ...                                                ...
8122  Trio é preso suspeito de roubo, tráfico e abus...  Positivo  trio é preso suspeito de roubo tráfico abuso s...  [trio, é, preso, suspeito, de, roubo, tráfico,...  [trio, preso, suspeito, roubo, tráfico, abuso,...
8123  Trio é preso suspeito de roubo, tráfico e abus...  Positivo  trio é preso suspeito de roubo tráfico abuso s...  [trio, é, preso, suspeito, de, roubo, tráfico,...  [trio, preso, suspeito, roubo, tráfico, abuso,...
8124  Trio é preso suspeito de roubo, tráfico e abus...  Positivo  trio é preso suspeito de roubo tráfico abuso s...  [trio, é, preso, suspeito, de, roubo, tráfico,...  [trio, preso, suspeito, roubo, tráfico, abuso,...
8125  Trio é preso suspeito de roubo, tráfico e abus...  Positivo  trio é preso suspeito de roubo tráfico abuso s...  [trio, é, preso, suspeito, de, roubo, tráfico,...  [trio, preso, suspeito, roubo, tráfico, abuso,...
8126  Trio suspeito de roubo de cargas é preso em Sa...  Positivo  trio suspeito de roubo de cargas é preso em sa...  [trio, suspeito, de, roubo, de, cargas, é, pre...  [trio, suspeito, roubo, cargas, preso, santa, ...

[8127 rows x 5 columns]
[2021-07-19 02:13:25+0000] INFO - prefect.TaskRunner | Task 'task_print': Finished task run for task with final state: 'Success'
[2021-07-19 02:13:25+0000] INFO - prefect.TaskRunner | Task 'splitting': Starting task run...
[2021-07-19 02:13:25+0000] INFO - prefect.TaskRunner | Task 'splitting': Finished task run for task with final state: 'Success'
[2021-07-19 02:13:25+0000] INFO - prefect.TaskRunner | Task 'splitting[0]': Starting task run...
[2021-07-19 02:13:25+0000] INFO - prefect.TaskRunner | Task 'splitting[0]': Finished task run for task with final state: 'Success'
[2021-07-19 02:13:25+0000] INFO - prefect.TaskRunner | Task 'splitting[1]': Starting task run...
[2021-07-19 02:13:25+0000] INFO - prefect.TaskRunner | Task 'splitting[1]': Finished task run for task with final state: 'Success'
[2021-07-19 02:13:25+0000] INFO - prefect.TaskRunner | Task 'splitting[2]': Starting task run...
[2021-07-19 02:13:25+0000] INFO - prefect.TaskRunner | Task 'splitting[2]': Finished task run for task with final state: 'Success'
[2021-07-19 02:13:25+0000] INFO - prefect.TaskRunner | Task 'model': Starting task run...
Fitting 5 folds for each of 10 candidates, totalling 50 fits
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=30.0, model__max_leaf_nodes=64, model__n_estimators=900, model__oob_score=True; total time=   4.4s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=30.0, model__max_leaf_nodes=64, model__n_estimators=900, model__oob_score=True; total time=   4.4s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=30.0, model__max_leaf_nodes=64, model__n_estimators=900, model__oob_score=True; total time=   4.3s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=30.0, model__max_leaf_nodes=64, model__n_estimators=900, model__oob_score=True; total time=   4.3s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=30.0, model__max_leaf_nodes=64, model__n_estimators=900, model__oob_score=True; total time=   4.3s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=7.0, model__max_leaf_nodes=128, model__n_estimators=200, model__oob_score=True; total time=   0.8s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=7.0, model__max_leaf_nodes=128, model__n_estimators=200, model__oob_score=True; total time=   0.7s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=7.0, model__max_leaf_nodes=128, model__n_estimators=200, model__oob_score=True; total time=   0.7s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=7.0, model__max_leaf_nodes=128, model__n_estimators=200, model__oob_score=True; total time=   0.7s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=7.0, model__max_leaf_nodes=128, model__n_estimators=200, model__oob_score=True; total time=   0.7s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=31.0, model__max_leaf_nodes=64, model__n_estimators=800, model__oob_score=True; total time=   3.9s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=31.0, model__max_leaf_nodes=64, model__n_estimators=800, model__oob_score=True; total time=   3.8s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=31.0, model__max_leaf_nodes=64, model__n_estimators=800, model__oob_score=True; total time=   3.9s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=31.0, model__max_leaf_nodes=64, model__n_estimators=800, model__oob_score=True; total time=   3.9s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=31.0, model__max_leaf_nodes=64, model__n_estimators=800, model__oob_score=True; total time=   3.8s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=26.0, model__max_leaf_nodes=16, model__n_estimators=600, model__oob_score=True; total time=   2.1s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=26.0, model__max_leaf_nodes=16, model__n_estimators=600, model__oob_score=True; total time=   2.2s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=26.0, model__max_leaf_nodes=16, model__n_estimators=600, model__oob_score=True; total time=   2.1s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=26.0, model__max_leaf_nodes=16, model__n_estimators=600, model__oob_score=True; total time=   2.1s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=26.0, model__max_leaf_nodes=16, model__n_estimators=600, model__oob_score=True; total time=   2.1s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=27.0, model__max_leaf_nodes=128, model__n_estimators=700, model__oob_score=True; total time=   4.0s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=27.0, model__max_leaf_nodes=128, model__n_estimators=700, model__oob_score=True; total time=   4.1s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=27.0, model__max_leaf_nodes=128, model__n_estimators=700, model__oob_score=True; total time=   4.1s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=27.0, model__max_leaf_nodes=128, model__n_estimators=700, model__oob_score=True; total time=   3.9s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=27.0, model__max_leaf_nodes=128, model__n_estimators=700, model__oob_score=True; total time=   4.0s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=5.0, model__max_leaf_nodes=16, model__n_estimators=100, model__oob_score=True; total time=   0.4s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=5.0, model__max_leaf_nodes=16, model__n_estimators=100, model__oob_score=True; total time=   0.4s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=5.0, model__max_leaf_nodes=16, model__n_estimators=100, model__oob_score=True; total time=   0.4s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=5.0, model__max_leaf_nodes=16, model__n_estimators=100, model__oob_score=True; total time=   0.4s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=5.0, model__max_leaf_nodes=16, model__n_estimators=100, model__oob_score=True; total time=   0.4s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=4.0, model__max_leaf_nodes=128, model__n_estimators=400, model__oob_score=True; total time=   1.2s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=4.0, model__max_leaf_nodes=128, model__n_estimators=400, model__oob_score=True; total time=   1.2s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=4.0, model__max_leaf_nodes=128, model__n_estimators=400, model__oob_score=True; total time=   1.2s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=4.0, model__max_leaf_nodes=128, model__n_estimators=400, model__oob_score=True; total time=   1.3s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=gini, model__max_depth=4.0, model__max_leaf_nodes=128, model__n_estimators=400, model__oob_score=True; total time=   1.2s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=entropy, model__max_depth=2.0, model__max_leaf_nodes=64, model__n_estimators=600, model__oob_score=True; total time=   1.6s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=entropy, model__max_depth=2.0, model__max_leaf_nodes=64, model__n_estimators=600, model__oob_score=True; total time=   1.7s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=entropy, model__max_depth=2.0, model__max_leaf_nodes=64, model__n_estimators=600, model__oob_score=True; total time=   1.7s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=entropy, model__max_depth=2.0, model__max_leaf_nodes=64, model__n_estimators=600, model__oob_score=True; total time=   1.7s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=entropy, model__max_depth=2.0, model__max_leaf_nodes=64, model__n_estimators=600, model__oob_score=True; total time=   1.7s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=entropy, model__max_depth=5.0, model__max_leaf_nodes=16, model__n_estimators=500, model__oob_score=True; total time=   1.6s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=entropy, model__max_depth=5.0, model__max_leaf_nodes=16, model__n_estimators=500, model__oob_score=True; total time=   1.6s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=entropy, model__max_depth=5.0, model__max_leaf_nodes=16, model__n_estimators=500, model__oob_score=True; total time=   1.5s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=entropy, model__max_depth=5.0, model__max_leaf_nodes=16, model__n_estimators=500, model__oob_score=True; total time=   1.6s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=entropy, model__max_depth=5.0, model__max_leaf_nodes=16, model__n_estimators=500, model__oob_score=True; total time=   1.5s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=entropy, model__max_depth=4.0, model__max_leaf_nodes=128, model__n_estimators=100, model__oob_score=True; total time=   0.4s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=entropy, model__max_depth=4.0, model__max_leaf_nodes=128, model__n_estimators=100, model__oob_score=True; total time=   0.4s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=entropy, model__max_depth=4.0, model__max_leaf_nodes=128, model__n_estimators=100, model__oob_score=True; total time=   0.4s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=entropy, model__max_depth=4.0, model__max_leaf_nodes=128, model__n_estimators=100, model__oob_score=True; total time=   0.4s
[CV] END model=RandomForestClassifier(random_state=1), model__criterion=entropy, model__max_depth=4.0, model__max_leaf_nodes=128, model__n_estimators=100, model__oob_score=True; total time=   0.4s
[2021-07-19 02:15:21+0000] INFO - prefect.TaskRunner | Task 'model': Finished task run for task with final state: 'Success'
[2021-07-19 02:15:21+0000] INFO - prefect.TaskRunner | Task 'model[1]': Starting task run...
[2021-07-19 02:15:21+0000] INFO - prefect.TaskRunner | Task 'model[1]': Finished task run for task with final state: 'Success'
[2021-07-19 02:15:21+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Starting task run...
[2021-07-19 02:15:21+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Finished task run for task with final state: 'Success'
[2021-07-19 02:15:21+0000] INFO - prefect.TaskRunner | Task 'model[0]': Starting task run...
[2021-07-19 02:15:22+0000] INFO - prefect.TaskRunner | Task 'model[0]': Finished task run for task with final state: 'Success'
[2021-07-19 02:15:22+0000] INFO - prefect.TaskRunner | Task 'model[3]': Starting task run...
[2021-07-19 02:15:22+0000] INFO - prefect.TaskRunner | Task 'model[3]': Finished task run for task with final state: 'Success'
[2021-07-19 02:15:22+0000] INFO - prefect.TaskRunner | Task 'model[1]['actual']': Starting task run...
[2021-07-19 02:15:22+0000] INFO - prefect.TaskRunner | Task 'model[1]['actual']': Finished task run for task with final state: 'Success'
[2021-07-19 02:15:22+0000] INFO - prefect.TaskRunner | Task 'model[0]['actual']': Starting task run...
[2021-07-19 02:15:22+0000] INFO - prefect.TaskRunner | Task 'model[0]['actual']': Finished task run for task with final state: 'Success'
[2021-07-19 02:15:22+0000] INFO - prefect.TaskRunner | Task 'model[2]': Starting task run...
[2021-07-19 02:15:22+0000] INFO - prefect.TaskRunner | Task 'model[2]': Finished task run for task with final state: 'Success'
[2021-07-19 02:15:22+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Starting task run...
[2021-07-19 02:15:22+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Finished task run for task with final state: 'Success'
[2021-07-19 02:15:22+0000] INFO - prefect.TaskRunner | Task 'model[1]['pred']': Starting task run...
[2021-07-19 02:15:22+0000] INFO - prefect.TaskRunner | Task 'model[1]['pred']': Finished task run for task with final state: 'Success'
[2021-07-19 02:15:22+0000] INFO - prefect.TaskRunner | Task 'model[0]['pred']': Starting task run...
[2021-07-19 02:15:22+0000] INFO - prefect.TaskRunner | Task 'model[0]['pred']': Finished task run for task with final state: 'Success'
[2021-07-19 02:15:22+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Starting task run...
[2021-07-19 02:15:22+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Finished task run for task with final state: 'Success'
[2021-07-19 02:15:22+0000] INFO - prefect.TaskRunner | Task 'performance': Starting task run...
[2021-07-19 02:15:22+0000] INFO - prefect.TaskRunner | Task 'performance': Finished task run for task with final state: 'Success'
[2021-07-19 02:15:22+0000] INFO - prefect.TaskRunner | Task 'performance': Starting task run...
[2021-07-19 02:15:22+0000] INFO - prefect.TaskRunner | Task 'performance': Finished task run for task with final state: 'Success'
[2021-07-19 02:15:22+0000] INFO - prefect.TaskRunner | Task 'model[2]['actual']': Starting task run...
[2021-07-19 02:15:22+0000] INFO - prefect.TaskRunner | Task 'model[2]['actual']': Finished task run for task with final state: 'Success'
[2021-07-19 02:15:22+0000] INFO - prefect.TaskRunner | Task 'model[2]['pred']': Starting task run...
[2021-07-19 02:15:22+0000] INFO - prefect.TaskRunner | Task 'model[2]['pred']': Finished task run for task with final state: 'Success'
[2021-07-19 02:15:22+0000] INFO - prefect.TaskRunner | Task 'performance': Starting task run...
[2021-07-19 02:15:22+0000] INFO - prefect.TaskRunner | Task 'performance': Finished task run for task with final state: 'Success'
[2021-07-19 02:15:22+0000] INFO - prefect.FlowRunner | Flow run SUCCESS: all reference tasks succeeded
Sun Jul 18 11:25:35 PM -03 2021
Check Toml...............................................................Failed
- hook id: check-toml
- duration: 0.04s
- files were modified by this hook
Check Yaml...............................................................Failed
- hook id: check-yaml
- duration: 0.06s
- files were modified by this hook
Fix requirements.txt.....................................................Failed
- hook id: requirements-txt-fixer
- duration: 0.04s
- exit code: 1
- files were modified by this hook

Sorting requirements.txt

black....................................................................Failed
- hook id: black
- duration: 0.29s
- files were modified by this hook

reformatted tests/test_data_sourcing.py
reformatted src/performance_monitoring.py
reformatted src/data_sourcing.py
reformatted src/test_fastapi.py
reformatted src/modeling.py
reformatted src/main.py
All done! ✨ 🍰 ✨
6 files reformatted, 11 files left unchanged.

flake8...................................................................Failed
- hook id: flake8
- duration: 0.24s
- exit code: 1
- files were modified by this hook

src/modeling.py:3:1: F401 'sklearn.svm.SVC' imported but unused
src/modeling.py:4:1: F401 'sklearn.naive_bayes.MultinomialNB' imported but unused
src/modeling.py:10:1: F401 'pickle' imported but unused
src/modeling.py:11:1: F401 'time' imported but unused
src/modeling.py:15:1: F401 'nltk' imported but unused
src/modeling.py:16:1: F401 'sklearn.feature_extraction.text.CountVectorizer' imported but unused
src/modeling.py:16:1: F401 'sklearn.feature_extraction.text.TfidfVectorizer' imported but unused
src/modeling.py:16:1: F401 'sklearn.feature_extraction.text.HashingVectorizer' imported but unused
src/modeling.py:21:1: F401 'nltk.tokenize.TreebankWordTokenizer' imported but unused
src/modeling.py:21:1: F401 'nltk.tokenize.word_tokenize' imported but unused
src/modeling.py:21:1: F401 'nltk.tokenize.wordpunct_tokenize' imported but unused
src/modeling.py:21:1: F401 'nltk.tokenize.TweetTokenizer' imported but unused
src/modeling.py:21:1: F401 'nltk.tokenize.MWETokenizer' imported but unused
src/data_sourcing.py:1:1: F401 'os.name' imported but unused
src/performance_monitoring.py:1:1: F401 'time' imported but unused
src/performance_monitoring.py:2:1: F401 'sklearn' imported but unused
src/performance_monitoring.py:4:1: F401 'pandas as pd' imported but unused
src/test_fastapi.py:1:1: F401 're.S' imported but unused
src/test_fastapi.py:4:1: F401 'eli5.show_weights' imported but unused
src/test_fastapi.py:5:1: F401 'pandas as pd' imported but unused
src/test_fastapi.py:6:1: F401 'eli5.lime.TextExplainer' imported but unused
src/test_fastapi.py:7:1: F401 'fastapi.responses.HTMLResponse' imported but unused
src/test_fastapi.py:32:1: F811 redefinition of unused 'main' from line 19
src/test_fastapi.py:42:89: E501 line too long (101 > 88 characters)
src/test_fastapi.py:48:1: F811 redefinition of unused 'main' from line 32
src/test_fastapi.py:59:1: F811 redefinition of unused 'main' from line 48
src/main.py:1:1: F401 'os.name' imported but unused
src/main.py:12:1: F401 'time' imported but unused
src/main.py:26:89: E501 line too long (113 > 88 characters)
src/data_preprocessing.py:7:1: E402 module level import not at top of file
src/data_preprocessing.py:7:1: F401 'nltk.tokenize.TreebankWordTokenizer' imported but unused
src/data_preprocessing.py:7:1: F401 'nltk.tokenize.word_tokenize' imported but unused
src/data_preprocessing.py:7:1: F401 'nltk.tokenize.wordpunct_tokenize' imported but unused
src/data_preprocessing.py:7:1: F401 'nltk.tokenize.TweetTokenizer' imported but unused
src/data_preprocessing.py:7:1: F401 'nltk.tokenize.MWETokenizer' imported but unused
src/data_preprocessing.py:15:1: E402 module level import not at top of file
src/feature_extraction.py:7:1: F401 'nltk.tokenize.TreebankWordTokenizer' imported but unused
src/feature_extraction.py:7:1: F401 'nltk.tokenize.wordpunct_tokenize' imported but unused
src/feature_extraction.py:7:1: F401 'nltk.tokenize.TweetTokenizer' imported but unused

test.....................................................................Failed
- hook id: test
- duration: 3.7s
- files were modified by this hook

make[1]: Entering directory '/home/dauberson/py-greenhouse'
docker-compose run test
Creating py-greenhouse_test_run ... 
Creating py-greenhouse_test_run ... done
============================= test session starts ==============================
platform linux -- Python 3.9.2, pytest-6.2.3, py-1.10.0, pluggy-0.13.1 -- /usr/local/bin/python
cachedir: .pytest_cache
rootdir: /usr/app
plugins: anyio-3.2.1
collecting ... collected 9 items

tests/test_data_sourcing.py::test_data_sourcing_get PASSED
tests/test_data_splitting.py::test_data_splitting_train_ratio PASSED
tests/test_data_splitting.py::test_data_splitting_valid_ratio PASSED
tests/test_data_splitting.py::test_data_splitting_test_ratio PASSED
tests/test_data_splitting.py::test_data_splitting_test_train_vs_valid PASSED
tests/test_data_splitting.py::test_data_splitting_test_train_vs_test PASSED
tests/test_feature_engineering.py::test_drop_missing_data PASSED
tests/test_feature_engineering.py::test_numerical_missing_imputation_twofeatures PASSED
tests/test_feature_engineering.py::test_one_hot_encoding   class
0     a
1     b
2     c
3     a
4   NaN
PASSED

=============================== warnings summary ===============================
../local/lib/python3.9/site-packages/jinja2/environment.py:362
  /usr/local/lib/python3.9/site-packages/jinja2/environment.py:362: DeprecationWarning: The 'with' extension is deprecated and will be removed in Jinja 3.1. This is built in now.
    self.extensions = load_extensions(self, extensions)

-- Docs: https://docs.pytest.org/en/stable/warnings.html
========================= 9 passed, 1 warning in 1.61s =========================
make[1]: Leaving directory '/home/dauberson/py-greenhouse'

Sun Jul 18 11:26:18 PM -03 2021
Check Toml...............................................................Failed
- hook id: check-toml
- duration: 0.03s
- files were modified by this hook
Check Yaml...............................................................Failed
- hook id: check-yaml
- duration: 0.05s
- files were modified by this hook
Fix requirements.txt.....................................................Failed
- hook id: requirements-txt-fixer
- duration: 0.03s
- files were modified by this hook
black....................................................................Failed
- hook id: black
- duration: 0.13s
- files were modified by this hook

All done! ✨ 🍰 ✨
17 files left unchanged.

flake8...................................................................Failed
- hook id: flake8
- duration: 0.2s
- exit code: 1
- files were modified by this hook

src/modeling.py:3:1: F401 'sklearn.svm.SVC' imported but unused
src/modeling.py:4:1: F401 'sklearn.naive_bayes.MultinomialNB' imported but unused
src/modeling.py:10:1: F401 'pickle' imported but unused
src/modeling.py:11:1: F401 'time' imported but unused
src/modeling.py:15:1: F401 'nltk' imported but unused
src/modeling.py:16:1: F401 'sklearn.feature_extraction.text.CountVectorizer' imported but unused
src/modeling.py:16:1: F401 'sklearn.feature_extraction.text.TfidfVectorizer' imported but unused
src/modeling.py:16:1: F401 'sklearn.feature_extraction.text.HashingVectorizer' imported but unused
src/modeling.py:21:1: F401 'nltk.tokenize.TreebankWordTokenizer' imported but unused
src/modeling.py:21:1: F401 'nltk.tokenize.word_tokenize' imported but unused
src/modeling.py:21:1: F401 'nltk.tokenize.wordpunct_tokenize' imported but unused
src/modeling.py:21:1: F401 'nltk.tokenize.TweetTokenizer' imported but unused
src/modeling.py:21:1: F401 'nltk.tokenize.MWETokenizer' imported but unused
src/data_sourcing.py:1:1: F401 'os.name' imported but unused
src/performance_monitoring.py:1:1: F401 'time' imported but unused
src/performance_monitoring.py:2:1: F401 'sklearn' imported but unused
src/performance_monitoring.py:4:1: F401 'pandas as pd' imported but unused
src/test_fastapi.py:1:1: F401 're.S' imported but unused
src/test_fastapi.py:4:1: F401 'eli5.show_weights' imported but unused
src/test_fastapi.py:5:1: F401 'pandas as pd' imported but unused
src/test_fastapi.py:6:1: F401 'eli5.lime.TextExplainer' imported but unused
src/test_fastapi.py:7:1: F401 'fastapi.responses.HTMLResponse' imported but unused
src/test_fastapi.py:32:1: F811 redefinition of unused 'main' from line 19
src/test_fastapi.py:42:89: E501 line too long (101 > 88 characters)
src/test_fastapi.py:48:1: F811 redefinition of unused 'main' from line 32
src/test_fastapi.py:59:1: F811 redefinition of unused 'main' from line 48
src/main.py:1:1: F401 'os.name' imported but unused
src/main.py:12:1: F401 'time' imported but unused
src/main.py:26:89: E501 line too long (113 > 88 characters)
src/data_preprocessing.py:7:1: E402 module level import not at top of file
src/data_preprocessing.py:7:1: F401 'nltk.tokenize.TreebankWordTokenizer' imported but unused
src/data_preprocessing.py:7:1: F401 'nltk.tokenize.word_tokenize' imported but unused
src/data_preprocessing.py:7:1: F401 'nltk.tokenize.wordpunct_tokenize' imported but unused
src/data_preprocessing.py:7:1: F401 'nltk.tokenize.TweetTokenizer' imported but unused
src/data_preprocessing.py:7:1: F401 'nltk.tokenize.MWETokenizer' imported but unused
src/data_preprocessing.py:15:1: E402 module level import not at top of file
src/feature_extraction.py:7:1: F401 'nltk.tokenize.TreebankWordTokenizer' imported but unused
src/feature_extraction.py:7:1: F401 'nltk.tokenize.wordpunct_tokenize' imported but unused
src/feature_extraction.py:7:1: F401 'nltk.tokenize.TweetTokenizer' imported but unused

test.....................................................................Failed
- hook id: test
- duration: 3.19s
- files were modified by this hook

make[1]: Entering directory '/home/dauberson/py-greenhouse'
docker-compose run test
Creating py-greenhouse_test_run ... 
Creating py-greenhouse_test_run ... done
============================= test session starts ==============================
platform linux -- Python 3.9.2, pytest-6.2.3, py-1.10.0, pluggy-0.13.1 -- /usr/local/bin/python
cachedir: .pytest_cache
rootdir: /usr/app
plugins: anyio-3.2.1
collecting ... collected 9 items

tests/test_data_sourcing.py::test_data_sourcing_get PASSED
tests/test_data_splitting.py::test_data_splitting_train_ratio PASSED
tests/test_data_splitting.py::test_data_splitting_valid_ratio PASSED
tests/test_data_splitting.py::test_data_splitting_test_ratio PASSED
tests/test_data_splitting.py::test_data_splitting_test_train_vs_valid PASSED
tests/test_data_splitting.py::test_data_splitting_test_train_vs_test PASSED
tests/test_feature_engineering.py::test_drop_missing_data PASSED
tests/test_feature_engineering.py::test_numerical_missing_imputation_twofeatures PASSED
tests/test_feature_engineering.py::test_one_hot_encoding   class
0     a
1     b
2     c
3     a
4   NaN
PASSED

=============================== warnings summary ===============================
../local/lib/python3.9/site-packages/jinja2/environment.py:362
  /usr/local/lib/python3.9/site-packages/jinja2/environment.py:362: DeprecationWarning: The 'with' extension is deprecated and will be removed in Jinja 3.1. This is built in now.
    self.extensions = load_extensions(self, extensions)

-- Docs: https://docs.pytest.org/en/stable/warnings.html
========================= 9 passed, 1 warning in 1.39s =========================
make[1]: Leaving directory '/home/dauberson/py-greenhouse'

Mon Jul 19 04:23:14 PM -03 2021
Creating py-greenhouse_run_run ... 
Creating py-greenhouse_run_run ... done
[nltk_data] Downloading package stopwords to /root/nltk_data...
[nltk_data]   Unzipping corpora/stopwords.zip.
[nltk_data] Downloading package punkt to /root/nltk_data...
[nltk_data]   Unzipping tokenizers/punkt.zip.
[2021-07-19 19:23:20+0000] INFO - prefect.FlowRunner | Beginning Flow run for 'greenhouse'
[2021-07-19 19:23:20+0000] INFO - prefect.TaskRunner | Task 'sourcing': Starting task run...
[2021-07-19 19:23:20+0000] INFO - prefect.TaskRunner | Task 'sourcing': Finished task run for task with final state: 'Success'
[2021-07-19 19:23:20+0000] INFO - prefect.TaskRunner | Task 'cleansing': Starting task run...
[2021-07-19 19:23:21+0000] INFO - prefect.TaskRunner | Task 'cleansing': Finished task run for task with final state: 'Success'
[2021-07-19 19:23:21+0000] INFO - prefect.TaskRunner | Task 'tokenizing': Starting task run...
[2021-07-19 19:23:21+0000] INFO - prefect.TaskRunner | Task 'tokenizing': Finished task run for task with final state: 'Success'
[2021-07-19 19:23:21+0000] INFO - prefect.TaskRunner | Task 'stop_words': Starting task run...
[2021-07-19 19:23:21+0000] INFO - prefect.TaskRunner | Task 'stop_words': Finished task run for task with final state: 'Success'
[2021-07-19 19:23:21+0000] INFO - prefect.TaskRunner | Task 'task_print': Starting task run...
[2021-07-19 19:23:21+0000] INFO - prefect.TaskRunner |                                                    text      cats                                         clean_text                                             tokens                                        tokens_wosw
0     � @ Governador Valadares, Minas Gerais https:/...    Neutro   governador valadares minas gerais https co b3...  [governador, valadares, minas, gerais, https, ...  [governador, valadares, minas, gerais, https, ...
1     �� @ Governador Valadares, Minas Gerais https:...    Neutro   governador valadares minas gerais https co dp...  [governador, valadares, minas, gerais, https, ...  [governador, valadares, minas, gerais, https, ...
2                           ��� https://t.co/BnDsO34qK0    Neutro                                https co bndso34qk0                            [https, co, bndso34qk0]                            [https, co, bndso34qk0]
3     ��� PSOL vai questionar aumento de vereadores ...  Negativo   psol vai questionar aumento de vereadores pre...  [psol, vai, questionar, aumento, de, vereadore...  [psol, vai, questionar, aumento, vereadores, p...
4     " bom é bandido morto"\nDeputado Cabo Júlio é ...    Neutro   bom é bandido morto deputado cabo júlio é con...  [bom, é, bandido, morto, deputado, cabo, júlio...  [bom, bandido, morto, deputado, cabo, júlio, c...
...                                                 ...       ...                                                ...                                                ...                                                ...
8122  Trio é preso suspeito de roubo, tráfico e abus...  Positivo  trio é preso suspeito de roubo tráfico abuso s...  [trio, é, preso, suspeito, de, roubo, tráfico,...  [trio, preso, suspeito, roubo, tráfico, abuso,...
8123  Trio é preso suspeito de roubo, tráfico e abus...  Positivo  trio é preso suspeito de roubo tráfico abuso s...  [trio, é, preso, suspeito, de, roubo, tráfico,...  [trio, preso, suspeito, roubo, tráfico, abuso,...
8124  Trio é preso suspeito de roubo, tráfico e abus...  Positivo  trio é preso suspeito de roubo tráfico abuso s...  [trio, é, preso, suspeito, de, roubo, tráfico,...  [trio, preso, suspeito, roubo, tráfico, abuso,...
8125  Trio é preso suspeito de roubo, tráfico e abus...  Positivo  trio é preso suspeito de roubo tráfico abuso s...  [trio, é, preso, suspeito, de, roubo, tráfico,...  [trio, preso, suspeito, roubo, tráfico, abuso,...
8126  Trio suspeito de roubo de cargas é preso em Sa...  Positivo  trio suspeito de roubo de cargas é preso em sa...  [trio, suspeito, de, roubo, de, cargas, é, pre...  [trio, suspeito, roubo, cargas, preso, santa, ...

[8127 rows x 5 columns]
[2021-07-19 19:23:21+0000] INFO - prefect.TaskRunner | Task 'task_print': Finished task run for task with final state: 'Success'
[2021-07-19 19:23:21+0000] INFO - prefect.TaskRunner | Task 'splitting': Starting task run...
[2021-07-19 19:23:21+0000] INFO - prefect.TaskRunner | Task 'splitting': Finished task run for task with final state: 'Success'
[2021-07-19 19:23:21+0000] INFO - prefect.TaskRunner | Task 'splitting[0]': Starting task run...
[2021-07-19 19:23:21+0000] INFO - prefect.TaskRunner | Task 'splitting[0]': Finished task run for task with final state: 'Success'
[2021-07-19 19:23:21+0000] INFO - prefect.TaskRunner | Task 'splitting[1]': Starting task run...
[2021-07-19 19:23:21+0000] INFO - prefect.TaskRunner | Task 'splitting[1]': Finished task run for task with final state: 'Success'
[2021-07-19 19:23:21+0000] INFO - prefect.TaskRunner | Task 'splitting[2]': Starting task run...
[2021-07-19 19:23:21+0000] INFO - prefect.TaskRunner | Task 'splitting[2]': Finished task run for task with final state: 'Success'
[2021-07-19 19:23:21+0000] INFO - prefect.TaskRunner | Task 'model': Starting task run...
Fitting 5 folds for each of 10 candidates, totalling 50 fits
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=28.0; total time=   0.8s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=28.0; total time=   0.8s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=28.0; total time=   0.8s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=28.0; total time=   0.7s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=28.0; total time=   0.8s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=4.0; total time=   0.3s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=4.0; total time=   0.3s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=4.0; total time=   0.3s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=4.0; total time=   0.3s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=4.0; total time=   0.4s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=23.0; total time=   0.7s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=23.0; total time=   0.7s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=23.0; total time=   0.7s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=23.0; total time=   0.7s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=23.0; total time=   0.7s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=19.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=19.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=19.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=19.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=19.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=24.0; total time=   0.8s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=24.0; total time=   0.8s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=24.0; total time=   0.8s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=24.0; total time=   0.7s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=24.0; total time=   0.7s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=18.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=18.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=18.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=18.0; total time=   0.5s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=18.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=22.0; total time=   0.7s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=22.0; total time=   0.7s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=22.0; total time=   0.7s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=22.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=22.0; total time=   0.7s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=29.0; total time=   0.8s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=29.0; total time=   0.8s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=29.0; total time=   0.8s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=29.0; total time=   0.8s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=29.0; total time=   0.8s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=20.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=20.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=20.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=20.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=20.0; total time=   0.6s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=15.0; total time=   0.5s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=15.0; total time=   0.5s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=15.0; total time=   0.5s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=15.0; total time=   0.5s
[CV] END model=RandomForestClassifier(random_state=1), model__max_depth=15.0; total time=   0.5s
[2021-07-19 19:23:56+0000] INFO - prefect.TaskRunner | Task 'model': Finished task run for task with final state: 'Success'
[2021-07-19 19:23:56+0000] INFO - prefect.TaskRunner | Task 'model[3]': Starting task run...
[2021-07-19 19:23:56+0000] INFO - prefect.TaskRunner | Task 'model[3]': Finished task run for task with final state: 'Success'
[2021-07-19 19:23:56+0000] INFO - prefect.TaskRunner | Task 'model[2]': Starting task run...
[2021-07-19 19:23:56+0000] INFO - prefect.TaskRunner | Task 'model[2]': Finished task run for task with final state: 'Success'
[2021-07-19 19:23:56+0000] INFO - prefect.TaskRunner | Task 'model[2]['actual']': Starting task run...
[2021-07-19 19:23:56+0000] INFO - prefect.TaskRunner | Task 'model[2]['actual']': Finished task run for task with final state: 'Success'
[2021-07-19 19:23:56+0000] INFO - prefect.TaskRunner | Task 'model[2]['pred']': Starting task run...
[2021-07-19 19:23:56+0000] INFO - prefect.TaskRunner | Task 'model[2]['pred']': Finished task run for task with final state: 'Success'
[2021-07-19 19:23:56+0000] INFO - prefect.TaskRunner | Task 'model[0]': Starting task run...
[2021-07-19 19:23:56+0000] INFO - prefect.TaskRunner | Task 'model[0]': Finished task run for task with final state: 'Success'
[2021-07-19 19:23:56+0000] INFO - prefect.TaskRunner | Task 'model[1]': Starting task run...
[2021-07-19 19:23:56+0000] INFO - prefect.TaskRunner | Task 'model[1]': Finished task run for task with final state: 'Success'
[2021-07-19 19:23:56+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Starting task run...
[2021-07-19 19:23:56+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Finished task run for task with final state: 'Success'
[2021-07-19 19:23:56+0000] INFO - prefect.TaskRunner | Task 'performance': Starting task run...
[2021-07-19 19:23:56+0000] INFO - prefect.TaskRunner | Task 'performance': Finished task run for task with final state: 'Success'
[2021-07-19 19:23:56+0000] INFO - prefect.TaskRunner | Task 'model[0]['actual']': Starting task run...
[2021-07-19 19:23:56+0000] INFO - prefect.TaskRunner | Task 'model[0]['actual']': Finished task run for task with final state: 'Success'
[2021-07-19 19:23:56+0000] INFO - prefect.TaskRunner | Task 'model[1]['pred']': Starting task run...
[2021-07-19 19:23:56+0000] INFO - prefect.TaskRunner | Task 'model[1]['pred']': Finished task run for task with final state: 'Success'
[2021-07-19 19:23:57+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Starting task run...
[2021-07-19 19:23:57+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Finished task run for task with final state: 'Success'
[2021-07-19 19:23:57+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Starting task run...
[2021-07-19 19:23:57+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Finished task run for task with final state: 'Success'
[2021-07-19 19:23:57+0000] INFO - prefect.TaskRunner | Task 'model[1]['actual']': Starting task run...
[2021-07-19 19:23:57+0000] INFO - prefect.TaskRunner | Task 'model[1]['actual']': Finished task run for task with final state: 'Success'
[2021-07-19 19:23:57+0000] INFO - prefect.TaskRunner | Task 'model[0]['pred']': Starting task run...
[2021-07-19 19:23:57+0000] INFO - prefect.TaskRunner | Task 'model[0]['pred']': Finished task run for task with final state: 'Success'
[2021-07-19 19:23:57+0000] INFO - prefect.TaskRunner | Task 'performance': Starting task run...
[2021-07-19 19:23:57+0000] INFO - prefect.TaskRunner | Task 'performance': Finished task run for task with final state: 'Success'
[2021-07-19 19:23:57+0000] INFO - prefect.TaskRunner | Task 'performance': Starting task run...
[2021-07-19 19:23:57+0000] INFO - prefect.TaskRunner | Task 'performance': Finished task run for task with final state: 'Success'
[2021-07-19 19:23:57+0000] INFO - prefect.FlowRunner | Flow run SUCCESS: all reference tasks succeeded
Fri Jul 23 02:01:46 PM -03 2021
Creating py-greenhouse_run_run ... 
Creating py-greenhouse_run_run ... done
[nltk_data] Downloading package stopwords to /root/nltk_data...
[nltk_data]   Unzipping corpora/stopwords.zip.
[nltk_data] Downloading package punkt to /root/nltk_data...
[nltk_data]   Unzipping tokenizers/punkt.zip.
[2021-07-23 17:01:50+0000] INFO - prefect.FlowRunner | Beginning Flow run for 'greenhouse'
[2021-07-23 17:01:50+0000] INFO - prefect.TaskRunner | Task 'sourcing': Starting task run...
[2021-07-23 17:01:50+0000] INFO - prefect.TaskRunner | Task 'sourcing': Finished task run for task with final state: 'Success'
[2021-07-23 17:01:51+0000] INFO - prefect.TaskRunner | Task 'cleansing': Starting task run...
[2021-07-23 17:01:51+0000] INFO - prefect.TaskRunner | Task 'cleansing': Finished task run for task with final state: 'Success'
[2021-07-23 17:01:51+0000] INFO - prefect.TaskRunner | Task 'stop_words': Starting task run...
[2021-07-23 17:01:51+0000] ERROR - prefect.TaskRunner | Unexpected error: KeyError('tokens')
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/site-packages/pandas/core/indexes/base.py", line 3080, in get_loc
    return self._engine.get_loc(casted_key)
  File "pandas/_libs/index.pyx", line 70, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/index.pyx", line 101, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/hashtable_class_helper.pxi", line 4554, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas/_libs/hashtable_class_helper.pxi", line 4562, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'tokens'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/site-packages/prefect/engine/runner.py", line 48, in inner
    new_state = method(self, state, *args, **kwargs)
  File "/usr/local/lib/python3.9/site-packages/prefect/engine/task_runner.py", line 865, in get_task_run_state
    value = prefect.utilities.executors.run_task_with_timeout(
  File "/usr/local/lib/python3.9/site-packages/prefect/utilities/executors.py", line 299, in run_task_with_timeout
    return task.run(*args, **kwargs)  # type: ignore
  File "/usr/app/src/main.py", line 51, in stop_words
    df["tokens_wosw"] = data_preprocessing.stop_words(df, token_col)
  File "/usr/app/src/data_preprocessing.py", line 46, in stop_words
    return df[token_col].apply(lambda row: [item for item in row if item not in stop])
  File "/usr/local/lib/python3.9/site-packages/pandas/core/frame.py", line 3024, in __getitem__
    indexer = self.columns.get_loc(key)
  File "/usr/local/lib/python3.9/site-packages/pandas/core/indexes/base.py", line 3082, in get_loc
    raise KeyError(key) from err
KeyError: 'tokens'
[2021-07-23 17:01:51+0000] INFO - prefect.TaskRunner | Task 'stop_words': Finished task run for task with final state: 'Failed'
[2021-07-23 17:01:51+0000] INFO - prefect.TaskRunner | Task 'splitting': Starting task run...
[2021-07-23 17:01:51+0000] INFO - prefect.TaskRunner | Task 'splitting': Finished task run for task with final state: 'TriggerFailed'
[2021-07-23 17:01:51+0000] INFO - prefect.TaskRunner | Task 'splitting[0]': Starting task run...
[2021-07-23 17:01:51+0000] INFO - prefect.TaskRunner | Task 'splitting[0]': Finished task run for task with final state: 'TriggerFailed'
[2021-07-23 17:01:51+0000] INFO - prefect.TaskRunner | Task 'splitting[1]': Starting task run...
[2021-07-23 17:01:51+0000] INFO - prefect.TaskRunner | Task 'splitting[1]': Finished task run for task with final state: 'TriggerFailed'
[2021-07-23 17:01:51+0000] INFO - prefect.TaskRunner | Task 'task_print': Starting task run...
[2021-07-23 17:01:51+0000] INFO - prefect.TaskRunner | Task 'task_print': Finished task run for task with final state: 'TriggerFailed'
[2021-07-23 17:01:51+0000] INFO - prefect.TaskRunner | Task 'splitting[2]': Starting task run...
[2021-07-23 17:01:51+0000] INFO - prefect.TaskRunner | Task 'splitting[2]': Finished task run for task with final state: 'TriggerFailed'
[2021-07-23 17:01:51+0000] INFO - prefect.TaskRunner | Task 'model': Starting task run...
[2021-07-23 17:01:51+0000] INFO - prefect.TaskRunner | Task 'model': Finished task run for task with final state: 'TriggerFailed'
[2021-07-23 17:01:51+0000] INFO - prefect.TaskRunner | Task 'model[1]': Starting task run...
[2021-07-23 17:01:51+0000] INFO - prefect.TaskRunner | Task 'model[1]': Finished task run for task with final state: 'TriggerFailed'
[2021-07-23 17:01:51+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Starting task run...
[2021-07-23 17:01:51+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Finished task run for task with final state: 'TriggerFailed'
[2021-07-23 17:01:51+0000] INFO - prefect.TaskRunner | Task 'model[0]': Starting task run...
[2021-07-23 17:01:51+0000] INFO - prefect.TaskRunner | Task 'model[0]': Finished task run for task with final state: 'TriggerFailed'
[2021-07-23 17:01:51+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Starting task run...
[2021-07-23 17:01:51+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Finished task run for task with final state: 'TriggerFailed'
[2021-07-23 17:01:51+0000] INFO - prefect.TaskRunner | Task 'model[2]': Starting task run...
[2021-07-23 17:01:51+0000] INFO - prefect.TaskRunner | Task 'model[2]': Finished task run for task with final state: 'TriggerFailed'
[2021-07-23 17:01:51+0000] INFO - prefect.TaskRunner | Task 'model[3]': Starting task run...
[2021-07-23 17:01:51+0000] INFO - prefect.TaskRunner | Task 'model[3]': Finished task run for task with final state: 'TriggerFailed'
[2021-07-23 17:01:51+0000] INFO - prefect.TaskRunner | Task 'model[1]['actual']': Starting task run...
[2021-07-23 17:01:51+0000] INFO - prefect.TaskRunner | Task 'model[1]['actual']': Finished task run for task with final state: 'TriggerFailed'
[2021-07-23 17:01:51+0000] INFO - prefect.TaskRunner | Task 'model[2]['actual']': Starting task run...
[2021-07-23 17:01:51+0000] INFO - prefect.TaskRunner | Task 'model[2]['actual']': Finished task run for task with final state: 'TriggerFailed'
[2021-07-23 17:01:51+0000] INFO - prefect.TaskRunner | Task 'model[1]['pred']': Starting task run...
[2021-07-23 17:01:51+0000] INFO - prefect.TaskRunner | Task 'model[1]['pred']': Finished task run for task with final state: 'TriggerFailed'
[2021-07-23 17:01:51+0000] INFO - prefect.TaskRunner | Task 'model[0]['actual']': Starting task run...
[2021-07-23 17:01:51+0000] INFO - prefect.TaskRunner | Task 'model[0]['actual']': Finished task run for task with final state: 'TriggerFailed'
[2021-07-23 17:01:51+0000] INFO - prefect.TaskRunner | Task 'model[0]['pred']': Starting task run...
[2021-07-23 17:01:51+0000] INFO - prefect.TaskRunner | Task 'model[0]['pred']': Finished task run for task with final state: 'TriggerFailed'
[2021-07-23 17:01:51+0000] INFO - prefect.TaskRunner | Task 'model[2]['pred']': Starting task run...
[2021-07-23 17:01:51+0000] INFO - prefect.TaskRunner | Task 'model[2]['pred']': Finished task run for task with final state: 'TriggerFailed'
[2021-07-23 17:01:51+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Starting task run...
[2021-07-23 17:01:51+0000] INFO - prefect.TaskRunner | Task 'df_to_csv': Finished task run for task with final state: 'TriggerFailed'
[2021-07-23 17:01:51+0000] INFO - prefect.TaskRunner | Task 'performance': Starting task run...
[2021-07-23 17:01:52+0000] INFO - prefect.TaskRunner | Task 'performance': Finished task run for task with final state: 'TriggerFailed'
[2021-07-23 17:01:52+0000] INFO - prefect.TaskRunner | Task 'performance': Starting task run...
[2021-07-23 17:01:52+0000] INFO - prefect.TaskRunner | Task 'performance': Finished task run for task with final state: 'TriggerFailed'
[2021-07-23 17:01:52+0000] INFO - prefect.TaskRunner | Task 'performance': Starting task run...
[2021-07-23 17:01:52+0000] INFO - prefect.TaskRunner | Task 'performance': Finished task run for task with final state: 'TriggerFailed'
[2021-07-23 17:01:52+0000] INFO - prefect.FlowRunner | Flow run FAILED: some reference tasks failed.
